{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\EditPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from './AddPolicy.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPolicy = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [policy, setPolicy] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    policyname: '',\n    sessiontimeout: '',\n    passwordattempts: '',\n    passwordneverexpires: false,\n    passwordchangeduration: '',\n    passwordexpirenotification: '',\n    status: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false); // Track form submission\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPolicyById = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data) {\n            setPolicy(data);\n            setFormData({\n              policyname: data.policyname,\n              sessiontimeout: data.sessiontimeout,\n              passwordattempts: data.passwordattempts,\n              passwordneverexpires: data.passwordneverexpires,\n              passwordchangeduration: data.passwordchangeduration,\n              passwordexpirenotification: data.passwordexpirenotification,\n              status: data.status\n            });\n            setLoading(false);\n          } else {\n            navigate('/GetPolicy');\n          }\n        } else {\n          navigate('/GetPolicy');\n        }\n      } catch (error) {\n        console.error('Error fetching policy:', error);\n        navigate('/GetPolicy');\n      }\n    };\n    fetchPolicyById();\n  }, [id, navigate]);\n  const validateFormData = data => {\n    const errors = {};\n\n    // Validate Session Timeout\n    if (data.sessiontimeout !== null && data.sessiontimeout.trim() !== '') {\n      if (isNaN(data.sessiontimeout) || data.sessiontimeout < 1 || data.sessiontimeout > 999) {\n        errors.sessiontimeout = 'Session Timeout must be a number between 1 and 999.';\n      }\n    }\n\n    // Validate Password Attempts\n    if (data.passwordattempts !== null && data.passwordattempts.trim() !== '') {\n      if (isNaN(data.passwordattempts) || data.passwordattempts < 1 || data.passwordattempts > 10) {\n        errors.passwordattempts = 'Password Attempts must be a number between 1 and 10.';\n      }\n    }\n\n    // Validate Password Change Duration\n    if (!data.passwordneverexpires) {\n      if (data.passwordchangeduration !== null && data.passwordchangeduration.trim() !== '') {\n        if (isNaN(data.passwordchangeduration) || data.passwordchangeduration < 1 || data.passwordchangeduration > 999) {\n          errors.passwordchangeduration = 'Password Change Duration must be a number between 1 and 999.';\n        }\n      }\n\n      // Validate Password Expire Notification\n      if (data.passwordexpirenotification !== null && data.passwordexpirenotification.trim() !== '') {\n        if (isNaN(data.passwordexpirenotification) || data.passwordexpirenotification < 1 || data.passwordexpirenotification > 999) {\n          errors.passwordexpirenotification = 'Password Expire Notification must be a number between 1 and 999.';\n        }\n      }\n    }\n\n    // Validate Status\n    if (data.status !== null && data.status.trim() !== '') {\n      if (!data.status) {\n        errors.status = 'Please select a status.';\n      }\n    }\n    return errors;\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setFormData(prevFormData => {\n      const updatedFormData = {\n        ...prevFormData,\n        [name]: newValue\n      };\n      if (name === 'passwordneverexpires' && checked) {\n        updatedFormData.passwordchangeduration = '';\n        updatedFormData.passwordexpirenotification = '';\n      }\n      return updatedFormData;\n    });\n\n    // Validate the form data on change\n    const validationErrors = validateFormData({\n      ...formData,\n      [name]: newValue\n    });\n    setErrors(validationErrors);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitted(true); // Set the submitted state to true\n\n    // Validate all fields\n    const validationErrors = validateFormData(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData,\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification\n        })\n      });\n      if (response.ok) {\n        alert('Policy updated successfully!');\n        navigate('/GetPolicy');\n      } else {\n        alert('Failed to update policy');\n      }\n    } catch (error) {\n      console.error('Error updating policy:', error);\n      alert('An error occurred while updating the policy.');\n    }\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  const handleReset = () => {\n    setFormData({\n      policyname: formData.policyname,\n      sessiontimeout: '',\n      passwordattempts: '',\n      passwordneverexpires: false,\n      passwordchangeduration: '',\n      passwordexpirenotification: '',\n      status: ''\n    });\n    setErrors({});\n    setSubmitted(false); // Reset the submitted state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading policy...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Policy Name: \", submitted && !formData.policyname && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.asterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"policyname\",\n          value: formData.policyname,\n          onChange: handleInputChange,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Session Timeout: \", submitted && !formData.sessiontimeout && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.asterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"sessiontimeout\",\n          value: formData.sessiontimeout,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.sessiontimeout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Attempts: \", submitted && !formData.passwordattempts && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.asterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordattempts\",\n          value: formData.passwordattempts,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordattempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Never Expires:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"passwordneverexpires\",\n          checked: formData.passwordneverexpires,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), !formData.passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password Change Duration: \", submitted && !formData.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.asterisk,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"passwordchangeduration\",\n            value: formData.passwordchangeduration,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.passwordchangeduration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password Expire Notification: \", submitted && !formData.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.asterisk,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 103\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"passwordexpirenotification\",\n            value: formData.passwordexpirenotification,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.passwordexpirenotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Status: \", submitted && !formData.status && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.asterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          value: formData.status,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), errors.status && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        className: styles.ResetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRedirect,\n        className: styles.ListButton,\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPolicy, \"tCrzWs2gqZvHS4QMYVx/cqz0W48=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPolicy;\nexport default EditPolicy;\nvar _c;\n$RefreshReg$(_c, \"EditPolicy\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPolicy","_s","id","policy","setPolicy","loading","setLoading","formData","setFormData","policyname","sessiontimeout","passwordattempts","passwordneverexpires","passwordchangeduration","passwordexpirenotification","status","errors","setErrors","submitted","setSubmitted","navigate","fetchPolicyById","response","fetch","ok","data","json","error","console","validateFormData","trim","isNaN","handleInputChange","e","name","value","type","checked","target","newValue","prevFormData","updatedFormData","validationErrors","handleSubmit","preventDefault","Object","keys","length","method","headers","body","JSON","stringify","alert","handleRedirect","handleReset","className","formContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formGroup","asterisk","onChange","readOnly","submitButton","onClick","ResetButton","ListButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/EditPolicy.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from './AddPolicy.module.css';\r\n\r\nconst EditPolicy = () => {\r\n  const { id } = useParams();\r\n  const [policy, setPolicy] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    policyname: '',\r\n    sessiontimeout: '',\r\n    passwordattempts: '',\r\n    passwordneverexpires: false,\r\n    passwordchangeduration: '',\r\n    passwordexpirenotification: '',\r\n    status: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false); // Track form submission\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPolicyById = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data) {\r\n            setPolicy(data);\r\n            setFormData({\r\n              policyname: data.policyname,\r\n              sessiontimeout: data.sessiontimeout,\r\n              passwordattempts: data.passwordattempts,\r\n              passwordneverexpires: data.passwordneverexpires,\r\n              passwordchangeduration: data.passwordchangeduration,\r\n              passwordexpirenotification: data.passwordexpirenotification,\r\n              status: data.status,\r\n            });\r\n            setLoading(false);\r\n          } else {\r\n            navigate('/GetPolicy');\r\n          }\r\n        } else {\r\n          navigate('/GetPolicy');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching policy:', error);\r\n        navigate('/GetPolicy');\r\n      }\r\n    };\r\n\r\n    fetchPolicyById();\r\n  }, [id, navigate]);\r\n\r\n  const validateFormData = (data) => {\r\n    const errors = {};\r\n  \r\n    // Validate Session Timeout\r\n    if (data.sessiontimeout !== null && data.sessiontimeout.trim() !== '') {\r\n      if (isNaN(data.sessiontimeout) || data.sessiontimeout < 1 || data.sessiontimeout > 999) {\r\n        errors.sessiontimeout = 'Session Timeout must be a number between 1 and 999.';\r\n      }\r\n    }\r\n  \r\n    // Validate Password Attempts\r\n    if (data.passwordattempts !== null && data.passwordattempts.trim() !== '') {\r\n      if (isNaN(data.passwordattempts) || data.passwordattempts < 1 || data.passwordattempts > 10) {\r\n        errors.passwordattempts = 'Password Attempts must be a number between 1 and 10.';\r\n      }\r\n    }\r\n  \r\n    // Validate Password Change Duration\r\n    if (!data.passwordneverexpires) {\r\n      if (data.passwordchangeduration !== null && data.passwordchangeduration.trim() !== '') {\r\n        if (isNaN(data.passwordchangeduration) || data.passwordchangeduration < 1 || data.passwordchangeduration > 999) {\r\n          errors.passwordchangeduration = 'Password Change Duration must be a number between 1 and 999.';\r\n        }\r\n      }\r\n  \r\n      // Validate Password Expire Notification\r\n      if (data.passwordexpirenotification !== null && data.passwordexpirenotification.trim() !== '') {\r\n        if (isNaN(data.passwordexpirenotification) || data.passwordexpirenotification < 1 || data.passwordexpirenotification > 999) {\r\n          errors.passwordexpirenotification = 'Password Expire Notification must be a number between 1 and 999.';\r\n        }\r\n      }\r\n    }\r\n  \r\n    // Validate Status\r\n    if (data.status !== null && data.status.trim() !== '') {\r\n      if (!data.status) {\r\n        errors.status = 'Please select a status.';\r\n      }\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const newValue = type === 'checkbox' ? checked : value;\r\n\r\n    setFormData((prevFormData) => {\r\n      const updatedFormData = {\r\n        ...prevFormData,\r\n        [name]: newValue,\r\n      };\r\n\r\n      if (name === 'passwordneverexpires' && checked) {\r\n        updatedFormData.passwordchangeduration = '';\r\n        updatedFormData.passwordexpirenotification = '';\r\n      }\r\n\r\n      return updatedFormData;\r\n    });\r\n\r\n    // Validate the form data on change\r\n    const validationErrors = validateFormData({\r\n      ...formData,\r\n      [name]: newValue,\r\n    });\r\n    setErrors(validationErrors);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true); // Set the submitted state to true\r\n\r\n    // Validate all fields\r\n    const validationErrors = validateFormData(formData);\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\r\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Policy updated successfully!');\r\n        navigate('/GetPolicy');\r\n      } else {\r\n        alert('Failed to update policy');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating policy:', error);\r\n      alert('An error occurred while updating the policy.');\r\n    }\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy');\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      policyname: formData.policyname,\r\n      sessiontimeout: '',\r\n      passwordattempts: '',\r\n      passwordneverexpires: false,\r\n      passwordchangeduration: '',\r\n      passwordexpirenotification: '',\r\n      status: '',\r\n    });\r\n    setErrors({});\r\n    setSubmitted(false); // Reset the submitted state\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      {loading ? (\r\n        <p>Loading policy...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Policy Name: {submitted && !formData.policyname && <span className={styles.asterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"policyname\"\r\n              value={formData.policyname}\r\n              onChange={handleInputChange}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Session Timeout: {submitted && !formData.sessiontimeout && <span className={styles.asterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"sessiontimeout\"\r\n              value={formData.sessiontimeout}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.sessiontimeout && <p className={styles.error}>{errors.sessiontimeout}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Password Attempts: {submitted && !formData.passwordattempts && <span className={styles.asterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"passwordattempts\"\r\n              value={formData.passwordattempts}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.passwordattempts && <p className={styles.error}>{errors.passwordattempts}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Never Expires:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"passwordneverexpires\"\r\n              checked={formData.passwordneverexpires}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {!formData.passwordneverexpires && (\r\n            <>\r\n              <div className={styles.formGroup}>\r\n                <label>\r\n                  Password Change Duration: {submitted && !formData.passwordchangeduration && <span className={styles.asterisk}>*</span>}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"passwordchangeduration\"\r\n                  value={formData.passwordchangeduration}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordchangeduration && <p className={styles.error}>{errors.passwordchangeduration}</p>}\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>\r\n                  Password Expire Notification: {submitted && !formData.passwordexpirenotification && <span className={styles.asterisk}>*</span>}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"passwordexpirenotification\"\r\n                  value={formData.passwordexpirenotification}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordexpirenotification && <p className={styles.error}>{errors.passwordexpirenotification}</p>}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Status: {submitted && !formData.status && <span className={styles.asterisk}>*</span>}\r\n            </label>\r\n            <select\r\n              name=\"status\"\r\n              value={formData.status}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"1\">Active</option>\r\n              <option value=\"2\">Inactive</option>\r\n            </select>\r\n            {errors.status && <p className={styles.error}>{errors.status}</p>}\r\n          </div>\r\n          <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n          <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n          <button type=\"button\" onClick={handleRedirect} className={styles.ListButton}>List</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}