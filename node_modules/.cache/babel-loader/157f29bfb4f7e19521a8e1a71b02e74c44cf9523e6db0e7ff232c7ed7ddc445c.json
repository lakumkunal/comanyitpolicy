{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setPolicyname] = useState('');\n  const [sessiontimeout, setSessiontimeout] = useState('');\n  const [passwordattempts, setPasswordAttempts] = useState('');\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\n  const [status, setStatus] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleReset = () => {\n    document.getElementById('addPolicyForm').reset();\n    setPolicyname('');\n    setSessiontimeout('');\n    setPasswordAttempts('');\n    setPasswordNeverExpires(false);\n    setPasswordChangeDuration('');\n    setPasswordExpireNotification('');\n    setStatus('');\n    setErrors({});\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  const validatePolicyName = name => {\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\n    if (!startsWithAlphanumericRegex.test(name)) {\n      return 'Policy name must start with an alphanumeric character.';\n    }\n    if (!alphanumericUnderscoreRegex.test(name)) {\n      return 'Policy name can only contain alphanumeric characters and underscores.';\n    }\n    if (!noConsecutiveCharsRegex.test(name)) {\n      return 'Policy name cannot contain three consecutive identical characters.';\n    }\n    return '';\n  };\n  const validateSessionTimeout = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Session timeout must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordAttempts = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password attempts must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordChangeDuration = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password change duration must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordExpireNotification = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password expire notification must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const checkDurationVsNotification = () => {\n    if (!passwordneverexpires) {\n      const duration = Number(passwordchangeduration);\n      const notification = Number(passwordexpirenotification);\n      if (duration <= notification) {\n        setErrors(prev => ({\n          ...prev,\n          passwordchangeduration: 'Password change duration must be greater than password expiration notification.'\n        }));\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n    const policyNameError = validatePolicyName(policyname);\n    if (policyNameError) {\n      newErrors.policyname = policyNameError;\n    }\n    const sessionTimeoutError = validateSessionTimeout(sessiontimeout);\n    if (sessionTimeoutError) {\n      newErrors.sessiontimeout = sessionTimeoutError;\n    }\n    const passwordAttemptsError = validatePasswordAttempts(passwordattempts);\n    if (passwordAttemptsError) {\n      newErrors.passwordattempts = passwordAttemptsError;\n    }\n    if (!status) {\n      newErrors.status = '*';\n    }\n    if (!passwordneverexpires) {\n      const passwordChangeDurationError = validatePasswordChangeDuration(passwordchangeduration);\n      if (passwordChangeDurationError) {\n        newErrors.passwordchangeduration = passwordChangeDurationError;\n      }\n      const passwordExpireNotificationError = validatePasswordExpireNotification(passwordexpirenotification);\n      if (passwordExpireNotificationError) {\n        newErrors.passwordexpirenotification = passwordExpireNotificationError;\n      }\n      if (!checkDurationVsNotification()) {\n        newErrors.passwordchangeduration = 'Password change duration must be greater than password expiration notification.';\n      }\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            policyname,\n            sessiontimeout,\n            passwordattempts,\n            passwordneverexpires,\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n            status\n          })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log('Form submitted successfully:', result);\n          handleReset();\n          toast.success('Form submitted and data stored successfully!');\n        } else {\n          toast.error('Error submitting form. Please try again.');\n        }\n      } catch (error) {\n        toast.error('An error occurred. Please check the console for details.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Policy Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: policyname,\n        onChange: e => {\n          setPolicyname(e.target.value);\n          const error = validatePolicyName(e.target.value);\n          setErrors(prev => ({\n            ...prev,\n            policyname: error\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), errors.policyname && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.policyname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Session Timeout:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sessiontimeout,\n        onChange: e => {\n          setSessiontimeout(e.target.value);\n          const error = validateSessionTimeout(e.target.value);\n          setErrors(prev => ({\n            ...prev,\n            sessiontimeout: error\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.sessiontimeout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Attempts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: passwordattempts,\n        onChange: e => {\n          setPasswordAttempts(e.target.value);\n          const error = validatePasswordAttempts(e.target.value);\n          setErrors(prev => ({\n            ...prev,\n            passwordattempts: error\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.passwordattempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Never Expires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: passwordneverexpires,\n        onChange: e => setPasswordNeverExpires(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Change Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordchangeduration,\n          onChange: e => {\n            setPasswordChangeDuration(e.target.value);\n            const error = validatePasswordChangeDuration(e.target.value);\n            setErrors(prev => ({\n              ...prev,\n              passwordchangeduration: error\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordchangeduration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Expire Notification:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordexpirenotification,\n          onChange: e => {\n            setPasswordExpireNotification(e.target.value);\n            const error = validatePasswordExpireNotification(e.target.value);\n            setErrors(prev => ({\n              ...prev,\n              passwordexpirenotification: error\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordexpirenotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Inactive\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        className: styles.ResetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRedirect,\n        className: styles.ResetButton,\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPolicy, \"fgYOZl/ykAK9qrYbkJyb7bKbkpo=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","styles","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPolicy","_s","policyname","setPolicyname","sessiontimeout","setSessiontimeout","passwordattempts","setPasswordAttempts","passwordneverexpires","setPasswordNeverExpires","passwordchangeduration","setPasswordChangeDuration","passwordexpirenotification","setPasswordExpireNotification","status","setStatus","errors","setErrors","navigate","handleReset","document","getElementById","reset","handleRedirect","validatePolicyName","name","alphanumericUnderscoreRegex","startsWithAlphanumericRegex","noConsecutiveCharsRegex","test","validateSessionTimeout","value","isNaN","Number","validatePasswordAttempts","validatePasswordChangeDuration","validatePasswordExpireNotification","checkDurationVsNotification","duration","notification","prev","handleSubmit","e","preventDefault","newErrors","policyNameError","sessionTimeoutError","passwordAttemptsError","passwordChangeDurationError","passwordExpireNotificationError","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","success","error","onSubmit","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","type","onChange","target","checked","formActions","submitButton","onClick","ResetButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddPolicy.module.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setPolicyname] = useState('');\r\n  const [sessiontimeout, setSessiontimeout] = useState('');\r\n  const [passwordattempts, setPasswordAttempts] = useState('');\r\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\r\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\r\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('addPolicyForm').reset(); \r\n    setPolicyname('');\r\n    setSessiontimeout('');\r\n    setPasswordAttempts('');\r\n    setPasswordNeverExpires(false);\r\n    setPasswordChangeDuration('');\r\n    setPasswordExpireNotification('');\r\n    setStatus('');\r\n    setErrors({});\r\n  };\r\n\r\n  const handleRedirect = ()=>\r\n  {\r\n    navigate('/GetPolicy');\r\n  }\r\n\r\n  const validatePolicyName = (name) => {\r\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\r\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\r\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\r\n\r\n    if (!startsWithAlphanumericRegex.test(name)) {\r\n      return 'Policy name must start with an alphanumeric character.';\r\n    }\r\n    if (!alphanumericUnderscoreRegex.test(name)) {\r\n      return 'Policy name can only contain alphanumeric characters and underscores.';\r\n    }\r\n    if (!noConsecutiveCharsRegex.test(name)) {\r\n      return 'Policy name cannot contain three consecutive identical characters.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Session timeout must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordAttempts = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password attempts must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password change duration must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password expire notification must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const checkDurationVsNotification = () => {\r\n    if (!passwordneverexpires) {\r\n      const duration = Number(passwordchangeduration);\r\n      const notification = Number(passwordexpirenotification);\r\n      if (duration <= notification) {\r\n        setErrors(prev => ({ ...prev, passwordchangeduration: 'Password change duration must be greater than password expiration notification.' }));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n    \r\n    const policyNameError = validatePolicyName(policyname);\r\n    if (policyNameError) {\r\n      newErrors.policyname = policyNameError;\r\n    }\r\n\r\n    const sessionTimeoutError = validateSessionTimeout(sessiontimeout);\r\n    if (sessionTimeoutError) {\r\n      newErrors.sessiontimeout = sessionTimeoutError;\r\n    }\r\n\r\n    const passwordAttemptsError = validatePasswordAttempts(passwordattempts);\r\n    if (passwordAttemptsError) {\r\n      newErrors.passwordattempts = passwordAttemptsError;\r\n    }\r\n\r\n    if (!status) {\r\n      newErrors.status = '*';\r\n    }\r\n\r\n    if (!passwordneverexpires) {\r\n      const passwordChangeDurationError = validatePasswordChangeDuration(passwordchangeduration);\r\n      if (passwordChangeDurationError) {\r\n        newErrors.passwordchangeduration = passwordChangeDurationError;\r\n      }\r\n\r\n      const passwordExpireNotificationError = validatePasswordExpireNotification(passwordexpirenotification);\r\n      if (passwordExpireNotificationError) {\r\n        newErrors.passwordexpirenotification = passwordExpireNotificationError;\r\n      }\r\n\r\n      if (!checkDurationVsNotification()) {\r\n        newErrors.passwordchangeduration = 'Password change duration must be greater than password expiration notification.';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            policyname,\r\n            sessiontimeout,\r\n            passwordattempts,\r\n            passwordneverexpires,\r\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n            status\r\n          })\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log('Form submitted successfully:', result);\r\n          handleReset();\r\n          toast.success('Form submitted and data stored successfully!');\r\n        } else {\r\n          toast.error('Error submitting form. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        toast.error('An error occurred. Please check the console for details.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.formContainer} id=\"addPolicyForm\">\r\n      <h1>Company IT Policy Master</h1>\r\n      <ToastContainer />\r\n      \r\n      <div className={styles.formGroup}>\r\n        <label>Policy Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={policyname}\r\n          onChange={(e) => {\r\n            setPolicyname(e.target.value);\r\n            const error = validatePolicyName(e.target.value);\r\n            setErrors(prev => ({ ...prev, policyname: error }));\r\n          }}\r\n        />\r\n        {errors.policyname && <span className={styles.error}>{errors.policyname}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Session Timeout:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={sessiontimeout}\r\n          onChange={(e) => {\r\n            setSessiontimeout(e.target.value);\r\n            const error = validateSessionTimeout(e.target.value);\r\n            setErrors(prev => ({ ...prev, sessiontimeout: error }));\r\n          }}\r\n        />\r\n        {errors.sessiontimeout && <span className={styles.error}>{errors.sessiontimeout}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Password Attempts:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={passwordattempts}\r\n          onChange={(e) => {\r\n            setPasswordAttempts(e.target.value);\r\n            const error = validatePasswordAttempts(e.target.value);\r\n            setErrors(prev => ({ ...prev, passwordattempts: error }));\r\n          }}\r\n        />\r\n        {errors.passwordattempts && <span className={styles.error}>{errors.passwordattempts}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Password Never Expires:</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={passwordneverexpires}\r\n          onChange={(e) => setPasswordNeverExpires(e.target.checked)}\r\n        />\r\n      </div>\r\n\r\n      {!passwordneverexpires && (\r\n        <>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Change Duration:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={passwordchangeduration}\r\n              onChange={(e) => {\r\n                setPasswordChangeDuration(e.target.value);\r\n                const error = validatePasswordChangeDuration(e.target.value);\r\n                setErrors(prev => ({ ...prev, passwordchangeduration: error }));\r\n              }}\r\n            />\r\n            {errors.passwordchangeduration && <span className={styles.error}>{errors.passwordchangeduration}</span>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Expire Notification:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={passwordexpirenotification}\r\n              onChange={(e) => {\r\n                setPasswordExpireNotification(e.target.value);\r\n                const error = validatePasswordExpireNotification(e.target.value);\r\n                setErrors(prev => ({ ...prev, passwordexpirenotification: error }));\r\n              }}\r\n            />\r\n            {errors.passwordexpirenotification && <span className={styles.error}>{errors.passwordexpirenotification}</span>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Status:</label>\r\n        <select\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n        >\r\n          <option value=\"\">Select</option>\r\n          <option value=\"Active\">Active</option>\r\n          <option value=\"Inactive\">Inactive</option>\r\n        </select>\r\n        {errors.status && <span className={styles.error}>{errors.status}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formActions}>\r\n          <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n          <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n          <button type=\"button\" onClick={handleRedirect} className={styles.ResetButton}>List</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}