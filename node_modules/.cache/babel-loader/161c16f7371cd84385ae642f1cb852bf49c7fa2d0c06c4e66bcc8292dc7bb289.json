{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\EditPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from './AddPolicy.module.css';\nimport { toast } from 'react-toastify';\nimport log from '../log';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPolicy = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [policy, setPolicy] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    policyname: '',\n    sessiontimeout: '',\n    passwordattempts: '',\n    passwordneverexpires: false,\n    passwordchangeduration: '',\n    passwordexpirenotification: '',\n    status: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPolicyById = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data) {\n            setPolicy(data);\n            setFormData({\n              policyname: data.policyname,\n              sessiontimeout: data.sessiontimeout,\n              passwordattempts: data.passwordattempts,\n              passwordneverexpires: data.passwordneverexpires,\n              passwordchangeduration: data.passwordchangeduration,\n              passwordexpirenotification: data.passwordexpirenotification,\n              status: data.status\n            });\n            setLoading(false);\n          } else {\n            navigate('/GetPolicy');\n          }\n        } else {\n          navigate('/GetPolicy');\n        }\n      } catch (error) {\n        toast.error('Error fetching policy:', error);\n        navigate('/GetPolicy');\n      }\n    };\n    fetchPolicyById();\n  }, [id, navigate]);\n  const validateFormData = data => {\n    const errors = {};\n    const isNonEmptyString = value => typeof value === 'string' && value.trim() !== '';\n    if (isNonEmptyString(data.sessiontimeout)) {\n      const sessionTimeout = parseInt(data.sessiontimeout, 10);\n      if (isNaN(sessionTimeout) || sessionTimeout < 1 || sessionTimeout > 999) {\n        errors.sessiontimeout = 'Session Timeout must be a number between 1 and 999.';\n      }\n    }\n    if (isNonEmptyString(data.passwordattempts)) {\n      const passwordAttempts = parseInt(data.passwordattempts, 10);\n      if (isNaN(passwordAttempts) || passwordAttempts < 1 || passwordAttempts > 999) {\n        errors.passwordattempts = 'Password Attempts must be a number between 1 and 999.';\n      }\n    }\n    if (!data.passwordneverexpires) {\n      if (isNonEmptyString(data.passwordchangeduration)) {\n        const passwordChangeDuration = parseInt(data.passwordchangeduration, 10);\n        if (isNaN(passwordChangeDuration) || passwordChangeDuration < 1 || passwordChangeDuration > 999) {\n          errors.passwordchangeduration = 'Password Change Duration must be a number between 1 and 999.';\n        }\n      }\n      if (isNonEmptyString(data.passwordexpirenotification)) {\n        const passwordExpireNotification = parseInt(data.passwordexpirenotification, 10);\n        if (isNaN(passwordExpireNotification) || passwordExpireNotification < 1 || passwordExpireNotification > 999) {\n          errors.passwordexpirenotification = 'Password Expire Notification must be a number between 1 and 999.';\n        }\n      }\n      if (isNonEmptyString(data.passwordchangeduration) && isNonEmptyString(data.passwordexpirenotification)) {\n        const passwordChangeDuration = parseInt(data.passwordchangeduration, 10);\n        const passwordExpireNotification = parseInt(data.passwordexpirenotification, 10);\n        if (passwordChangeDuration < passwordExpireNotification) {\n          errors.passwordchangeduration = 'Password Change Duration must be greater than or equal to Password Expire Notification.';\n        }\n        if (passwordExpireNotification > passwordChangeDuration) {\n          errors.passwordchangeduration = 'Password Change Duration must be greater than or equal to Password Expire Notification.';\n        }\n      }\n    }\n    if (isNonEmptyString(data.status)) {\n      if (!data.status) {\n        errors.status = 'Please select a status.';\n      }\n    }\n    return errors;\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    let newValue = type === 'checkbox' ? checked : value;\n    setFormData(prevFormData => {\n      let updatedFormData = {\n        ...prevFormData,\n        [name]: newValue\n      };\n      if (['sessiontimeout', 'passwordattempts', 'passwordchangeduration', 'passwordexpirenotification'].includes(name)) {\n        const numericValue = newValue.replace(/[^0-9]/g, '');\n        updatedFormData[name] = numericValue;\n      }\n      if (name === 'passwordneverexpires' && checked) {\n        updatedFormData.passwordchangeduration = '';\n        updatedFormData.passwordexpirenotification = '';\n      }\n      return updatedFormData;\n    });\n    const validationErrors = validateFormData({\n      ...formData,\n      [name]: newValue\n    });\n    setErrors(validationErrors);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitted(true);\n    const {\n      policyname,\n      sessiontimeout,\n      passwordattempts,\n      passwordneverexpires,\n      passwordchangeduration,\n      passwordexpirenotification,\n      status\n    } = formData;\n    if (!policyname || !sessiontimeout || !passwordattempts || !status) {\n      return;\n    }\n    if (!passwordneverexpires && (!passwordchangeduration || !passwordexpirenotification)) {\n      return;\n    }\n    const validationErrors = validateFormData(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData,\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification\n        })\n      });\n      if (response.ok) {\n        const policyName = formData.policyname || 'Policy';\n        toast.success(`Policy ${policyName} updated successfully!`);\n        log('PUT /api/EditPolicy', 'Success', 200, `Policy ${policyName} updated successfully`);\n      } else {\n        toast.error('Failed to update policy');\n        log('PUT /api/EditPolicy', 'Error', response.status, 'Failed to update policy');\n      }\n    } catch (error) {\n      console.error('Error updating policy:', error);\n      toast.error('An error occurred while updating the policy.');\n      log('PUT /api/EditPolicy', 'Error', 500, 'An error occurred while updating the policy');\n      return;\n    }\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  const handleReset = () => {\n    setFormData({\n      policyname: formData.policyname,\n      sessiontimeout: '',\n      passwordattempts: '',\n      passwordneverexpires: false,\n      passwordchangeduration: '',\n      passwordexpirenotification: '',\n      status: ''\n    });\n    setErrors({});\n    setSubmitted(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading policy...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Company IT Policy Master\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Policy Name: \", submitted && !formData.policyname && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"policyname\",\n          value: formData.policyname,\n          onChange: handleInputChange,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Session Timeout: \", submitted && !formData.sessiontimeout && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"sessiontimeout\",\n          value: formData.sessiontimeout,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.sessiontimeout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Attempts: \", submitted && !formData.passwordattempts && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 78\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordattempts\",\n          value: formData.passwordattempts,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordattempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Never Expires:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"passwordneverexpires\",\n          checked: formData.passwordneverexpires,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), !formData.passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password Change Duration: \", submitted && !formData.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.requiredAsterisk,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"passwordchangeduration\",\n            value: formData.passwordchangeduration,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.passwordchangeduration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password Expire Notification: \", submitted && !formData.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.requiredAsterisk,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 103\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"passwordexpirenotification\",\n            value: formData.passwordexpirenotification,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.passwordexpirenotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Status: \", submitted && !formData.status && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          value: formData.status,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), errors.status && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        className: styles.ResetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRedirect,\n        className: styles.ListButton,\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPolicy, \"tCrzWs2gqZvHS4QMYVx/cqz0W48=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPolicy;\nexport default EditPolicy;\nvar _c;\n$RefreshReg$(_c, \"EditPolicy\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","styles","toast","log","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPolicy","_s","id","policy","setPolicy","loading","setLoading","formData","setFormData","policyname","sessiontimeout","passwordattempts","passwordneverexpires","passwordchangeduration","passwordexpirenotification","status","errors","setErrors","submitted","setSubmitted","navigate","fetchPolicyById","response","fetch","ok","data","json","error","validateFormData","isNonEmptyString","value","trim","sessionTimeout","parseInt","isNaN","passwordAttempts","passwordChangeDuration","passwordExpireNotification","handleInputChange","e","name","type","checked","target","newValue","prevFormData","updatedFormData","includes","numericValue","replace","validationErrors","handleSubmit","preventDefault","Object","keys","length","method","headers","body","JSON","stringify","policyName","success","console","handleRedirect","handleReset","className","formContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formGroup","requiredAsterisk","onChange","readOnly","submitButton","onClick","ResetButton","ListButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/EditPolicy.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from './AddPolicy.module.css';\r\nimport { toast } from 'react-toastify';\r\nimport log from '../log';\r\n\r\nconst EditPolicy = () => {\r\n  const { id } = useParams();\r\n  const [policy, setPolicy] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    policyname: '',\r\n    sessiontimeout: '',\r\n    passwordattempts: '',\r\n    passwordneverexpires: false,\r\n    passwordchangeduration: '',\r\n    passwordexpirenotification: '',\r\n    status: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false); \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPolicyById = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data) {\r\n            setPolicy(data);\r\n            setFormData({\r\n              policyname: data.policyname,\r\n              sessiontimeout: data.sessiontimeout,\r\n              passwordattempts: data.passwordattempts,\r\n              passwordneverexpires: data.passwordneverexpires,\r\n              passwordchangeduration: data.passwordchangeduration,\r\n              passwordexpirenotification: data.passwordexpirenotification,\r\n              status: data.status,\r\n            });\r\n            setLoading(false);\r\n          } else {\r\n\r\n            navigate('/GetPolicy');\r\n          }\r\n        } else {\r\n          navigate('/GetPolicy');\r\n        }\r\n      } catch (error) {\r\n        toast.error('Error fetching policy:', error);\r\n        navigate('/GetPolicy');\r\n      }\r\n    };\r\n\r\n    fetchPolicyById();\r\n  }, [id, navigate]);\r\n\r\n  const validateFormData = (data) => {\r\n    const errors = {};\r\n  \r\n    \r\n    const isNonEmptyString = (value) => typeof value === 'string' && value.trim() !== '';\r\n  \r\n    \r\n    if (isNonEmptyString(data.sessiontimeout)) {\r\n      const sessionTimeout = parseInt(data.sessiontimeout, 10);\r\n      if (isNaN(sessionTimeout) || sessionTimeout < 1 || sessionTimeout > 999) {\r\n        errors.sessiontimeout = 'Session Timeout must be a number between 1 and 999.';\r\n      }\r\n    }\r\n  \r\n    \r\n    if (isNonEmptyString(data.passwordattempts)) {\r\n      const passwordAttempts = parseInt(data.passwordattempts, 10);\r\n      if (isNaN(passwordAttempts) || passwordAttempts < 1 || passwordAttempts > 999) {\r\n        errors.passwordattempts = 'Password Attempts must be a number between 1 and 999.';\r\n      }\r\n    }\r\n  \r\n    \r\n    if (!data.passwordneverexpires) {\r\n      if (isNonEmptyString(data.passwordchangeduration)) {\r\n        const passwordChangeDuration = parseInt(data.passwordchangeduration, 10);\r\n        if (isNaN(passwordChangeDuration) || passwordChangeDuration < 1 || passwordChangeDuration > 999) {\r\n          errors.passwordchangeduration = 'Password Change Duration must be a number between 1 and 999.';\r\n        }\r\n      }\r\n  \r\n      \r\n      if (isNonEmptyString(data.passwordexpirenotification)) {\r\n        const passwordExpireNotification = parseInt(data.passwordexpirenotification, 10);\r\n        if (isNaN(passwordExpireNotification) || passwordExpireNotification < 1 || passwordExpireNotification > 999) {\r\n          errors.passwordexpirenotification = 'Password Expire Notification must be a number between 1 and 999.';\r\n        }\r\n      }\r\n      if (\r\n        isNonEmptyString(data.passwordchangeduration) &&\r\n        isNonEmptyString(data.passwordexpirenotification)\r\n      ) {\r\n        const passwordChangeDuration = parseInt(data.passwordchangeduration, 10);\r\n        const passwordExpireNotification = parseInt(data.passwordexpirenotification, 10);\r\n        if (passwordChangeDuration < passwordExpireNotification){\r\n          errors.passwordchangeduration = 'Password Change Duration must be greater than or equal to Password Expire Notification.';\r\n        }\r\n        if(passwordExpireNotification>passwordChangeDuration){\r\n          errors.passwordchangeduration = 'Password Change Duration must be greater than or equal to Password Expire Notification.';\r\n        \r\n        }\r\n      }\r\n    }\r\n\r\n    if (isNonEmptyString(data.status)) {\r\n      if (!data.status) {\r\n        errors.status = 'Please select a status.';\r\n      }\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    let newValue = type === 'checkbox' ? checked : value; \r\n    setFormData((prevFormData) => {\r\n      let updatedFormData = {\r\n        ...prevFormData,\r\n        [name]: newValue,\r\n      };\r\n  \r\n      if (['sessiontimeout', 'passwordattempts', 'passwordchangeduration', 'passwordexpirenotification'].includes(name)) {\r\n        const numericValue = newValue.replace(/[^0-9]/g, ''); \r\n        updatedFormData[name] = numericValue; \r\n      }\r\n  \r\n      if (name === 'passwordneverexpires' && checked) {\r\n        updatedFormData.passwordchangeduration = '';\r\n        updatedFormData.passwordexpirenotification = '';\r\n      }\r\n  \r\n      return updatedFormData;\r\n    });\r\n  \r\n  \r\n    const validationErrors = validateFormData({\r\n      ...formData,\r\n      [name]: newValue,\r\n    });\r\n    setErrors(validationErrors);\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    const { policyname, sessiontimeout, passwordattempts, passwordneverexpires,passwordchangeduration, passwordexpirenotification, status } = formData;\r\n\r\n    if (!policyname || !sessiontimeout || !passwordattempts || !status) {\r\n      return; \r\n  }\r\n\r\n  if (!passwordneverexpires && (!passwordchangeduration || !passwordexpirenotification)) {\r\n      return;  \r\n  }\r\n    const validationErrors = validateFormData(formData);\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\r\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification,\r\n        }),\r\n      });\r\n    \r\n      if (response.ok) {\r\n        const policyName = formData.policyname || 'Policy'; \r\n        toast.success(`Policy ${policyName} updated successfully!`);\r\n        \r\n        log('PUT /api/EditPolicy', 'Success', 200, `Policy ${policyName} updated successfully`);\r\n        \r\n      } else {\r\n        toast.error('Failed to update policy');\r\n        \r\n        log('PUT /api/EditPolicy', 'Error', response.status, 'Failed to update policy');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating policy:', error);\r\n      toast.error('An error occurred while updating the policy.');\r\n      \r\n      log('PUT /api/EditPolicy', 'Error', 500, 'An error occurred while updating the policy');\r\n      \r\n      return;\r\n    }\r\n  }\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy');\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      policyname: formData.policyname,\r\n      sessiontimeout: '',\r\n      passwordattempts: '',\r\n      passwordneverexpires: false,\r\n      passwordchangeduration: '',\r\n      passwordexpirenotification: '',\r\n      status: '',\r\n\r\n    });\r\n    setErrors({});\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      {loading ? (\r\n        <p>Loading policy...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n           <h1>Company IT Policy Master</h1>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Policy Name: {submitted && !formData.policyname && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"policyname\"\r\n              value={formData.policyname}\r\n              onChange={handleInputChange}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Session Timeout: {submitted && !formData.sessiontimeout && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"sessiontimeout\"\r\n              value={formData.sessiontimeout}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.sessiontimeout && <p className={styles.error}>{errors.sessiontimeout}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Password Attempts: {submitted && !formData.passwordattempts && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"passwordattempts\"\r\n              value={formData.passwordattempts}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.passwordattempts && <p className={styles.error}>{errors.passwordattempts}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Never Expires:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"passwordneverexpires\"\r\n              checked={formData.passwordneverexpires}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {!formData.passwordneverexpires && (\r\n            <>\r\n              <div className={styles.formGroup}>\r\n                <label>\r\n                  Password Change Duration: {submitted && !formData.passwordchangeduration && <span className={styles.requiredAsterisk}>*</span>}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"passwordchangeduration\"\r\n                  value={formData.passwordchangeduration}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordchangeduration && <p className={styles.error}>{errors.passwordchangeduration}</p>}\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>\r\n                  Password Expire Notification: {submitted && !formData.passwordexpirenotification && <span className={styles.requiredAsterisk}>*</span>}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"passwordexpirenotification\"\r\n                  value={formData.passwordexpirenotification}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordexpirenotification && <p className={styles.error}>{errors.passwordexpirenotification}</p>}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Status: {submitted && !formData.status && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <select\r\n              name=\"status\"\r\n              value={formData.status}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"1\">Active</option>\r\n              <option value=\"2\">Inactive</option>\r\n            </select>\r\n            {errors.status && <p className={styles.error}>{errors.status}</p>}\r\n          </div>\r\n          <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n          <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n          <button type=\"button\" onClick={handleRedirect} className={styles.ListButton}>List</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}