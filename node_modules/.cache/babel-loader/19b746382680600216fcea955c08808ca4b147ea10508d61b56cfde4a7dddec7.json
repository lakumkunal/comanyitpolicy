{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setPolicyname] = useState('');\n  const [sessiontimeout, setSessiontimeout] = useState('');\n  const [passwordattempts, setPasswordAttempts] = useState('');\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\n  const [status, setStatus] = useState('');\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const navigate = useNavigate();\n  const handleReset = () => {\n    document.getElementById('addPolicyForm').reset();\n    setPolicyname('');\n    setSessiontimeout('');\n    setPasswordAttempts('');\n    setPasswordNeverExpires(false);\n    setPasswordChangeDuration('');\n    setPasswordExpireNotification('');\n    setStatus('');\n    setErrors({});\n    setTouched({});\n  };\n  const validatePolicyName = name => {\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\n    if (!name) return '*';\n    if (!startsWithAlphanumericRegex.test(name)) return 'Policy name must start with an alphanumeric character.';\n    if (!alphanumericUnderscoreRegex.test(name)) return 'Policy name can only contain alphanumeric characters and underscores.';\n    if (!noConsecutiveCharsRegex.test(name)) return 'Policy name cannot contain three consecutive identical characters.';\n    return '';\n  };\n  const validateSessionTimeout = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) > 999) return 'Session timeout must be a number less than or equal to 999.';\n    return '';\n  };\n  const validatePasswordAttempts = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) > 999) return 'Password attempts must be a number less than or equal to 999.';\n    return '';\n  };\n  const validatePasswordChangeDuration = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) > 999) return 'Password change duration must be a number less than or equal to 999.';\n    return '';\n  };\n  const validatePasswordExpireNotification = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) > 999) return 'Password expire notification must be a number less than or equal to 999.';\n    return '';\n  };\n  const checkDurationVsNotification = () => {\n    if (!passwordneverexpires) {\n      const duration = Number(passwordchangeduration);\n      const notification = Number(passwordexpirenotification);\n      if (duration <= notification) {\n        setErrors(prev => ({\n          ...prev,\n          passwordchangeduration: 'Password change duration must be greater than password expiration notification.'\n        }));\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setTouched({\n      policyname: true,\n      sessiontimeout: true,\n      passwordattempts: true,\n      passwordchangeduration: true,\n      passwordexpirenotification: true,\n      status: true\n    });\n    const newErrors = {};\n\n    // Validate each field\n    newErrors.policyname = validatePolicyName(policyname);\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\n    if (!status) newErrors.status = '*';\n    if (!passwordneverexpires) {\n      newErrors.passwordchangeduration = validatePasswordChangeDuration(passwordchangeduration);\n      newErrors.passwordexpirenotification = validatePasswordExpireNotification(passwordexpirenotification);\n      if (!checkDurationVsNotification()) {\n        newErrors.passwordchangeduration = 'Password change duration must be greater than password expiration notification.';\n      }\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            policyname,\n            sessiontimeout,\n            passwordattempts,\n            passwordneverexpires,\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n            status\n          })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log('Form submitted successfully:', result);\n          handleReset();\n          toast.success('Form submitted and data stored successfully!');\n        } else {\n          toast.error('Error submitting form. Please try again.');\n        }\n      } catch (error) {\n        toast.error('An error occurred. Please check the console for details.');\n      }\n    }\n  };\n  const handleChange = (e, validator) => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const isCheckbox = type === 'checkbox';\n\n    // Update state based on the field\n    switch (name) {\n      case 'policyname':\n        setPolicyname(value);\n        break;\n      case 'sessiontimeout':\n        setSessiontimeout(value);\n        break;\n      case 'passwordattempts':\n        setPasswordAttempts(value);\n        break;\n      case 'passwordchangeduration':\n        setPasswordChangeDuration(value);\n        break;\n      case 'passwordexpirenotification':\n        setPasswordExpireNotification(value);\n        break;\n      case 'status':\n        setStatus(value);\n        break;\n      case 'passwordneverexpires':\n        setPasswordNeverExpires(checked);\n        break;\n      default:\n        break;\n    }\n\n    // Only validate if the field has been touched\n    if (touched[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: validator(value)\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Policy Name:\", touched.policyname && (errors.policyname === '*' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 63\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.policyname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 113\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"policyname\",\n        value: policyname,\n        onChange: e => handleChange(e, validatePolicyName),\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          policyname: true\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), touched.policyname && errors.policyname && errors.policyname !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.policyname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Session Timeout:\", touched.sessiontimeout && (errors.sessiontimeout === '*' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 71\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.sessiontimeout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 121\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"sessiontimeout\",\n        value: sessiontimeout,\n        onChange: e => handleChange(e, validateSessionTimeout),\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          sessiontimeout: true\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), touched.sessiontimeout && errors.sessiontimeout && errors.sessiontimeout !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.sessiontimeout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password Attempts:\", touched.passwordattempts && (errors.passwordattempts === '*' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 75\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordattempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 125\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passwordattempts\",\n        value: passwordattempts,\n        onChange: e => handleChange(e, validatePasswordAttempts),\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          passwordattempts: true\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), touched.passwordattempts && errors.passwordattempts && errors.passwordattempts !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.passwordattempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 100\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Never Expires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"passwordneverexpires\",\n        checked: passwordneverexpires,\n        onChange: e => handleChange(e, () => '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Change Duration:\", touched.passwordchangeduration && (errors.passwordchangeduration === '*' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.errorAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 91\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.error,\n            children: errors.passwordchangeduration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 141\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordchangeduration\",\n          value: passwordchangeduration,\n          onChange: e => handleChange(e, validatePasswordChangeDuration),\n          onBlur: () => setTouched(prev => ({\n            ...prev,\n            passwordchangeduration: true\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), touched.passwordchangeduration && errors.passwordchangeduration && errors.passwordchangeduration !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordchangeduration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 122\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Expire Notification:\", touched.passwordexpirenotification && (errors.passwordexpirenotification === '*' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.errorAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 99\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.error,\n            children: errors.passwordexpirenotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 149\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordexpirenotification\",\n          value: passwordexpirenotification,\n          onChange: e => handleChange(e, validatePasswordExpireNotification),\n          onBlur: () => setTouched(prev => ({\n            ...prev,\n            passwordexpirenotification: true\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), touched.passwordexpirenotification && errors.passwordexpirenotification && errors.passwordexpirenotification !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordexpirenotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 134\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", touched.status && (errors.status === '*' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 105\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: status,\n        onChange: e => handleChange(e, () => ''),\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          status: true\n        })),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Inactive\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), touched.status && errors.status && errors.status !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formActions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPolicy, \"pb/om729o4xEqQ6RetOT206J9vY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","styles","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPolicy","_s","policyname","setPolicyname","sessiontimeout","setSessiontimeout","passwordattempts","setPasswordAttempts","passwordneverexpires","setPasswordNeverExpires","passwordchangeduration","setPasswordChangeDuration","passwordexpirenotification","setPasswordExpireNotification","status","setStatus","errors","setErrors","touched","setTouched","navigate","handleReset","document","getElementById","reset","validatePolicyName","name","alphanumericUnderscoreRegex","startsWithAlphanumericRegex","noConsecutiveCharsRegex","test","validateSessionTimeout","value","isNaN","Number","validatePasswordAttempts","validatePasswordChangeDuration","validatePasswordExpireNotification","checkDurationVsNotification","duration","notification","prev","handleSubmit","e","preventDefault","newErrors","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","success","error","handleChange","validator","type","checked","target","isCheckbox","onSubmit","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","errorAsterisk","onChange","onBlur","formActions","onClick","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddPolicy.module.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setPolicyname] = useState('');\r\n  const [sessiontimeout, setSessiontimeout] = useState('');\r\n  const [passwordattempts, setPasswordAttempts] = useState('');\r\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\r\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\r\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('addPolicyForm').reset(); \r\n    setPolicyname('');\r\n    setSessiontimeout('');\r\n    setPasswordAttempts('');\r\n    setPasswordNeverExpires(false);\r\n    setPasswordChangeDuration('');\r\n    setPasswordExpireNotification('');\r\n    setStatus('');\r\n    setErrors({});\r\n    setTouched({});\r\n  };\r\n\r\n  const validatePolicyName = (name) => {\r\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\r\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\r\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\r\n\r\n    if (!name) return '*';\r\n    if (!startsWithAlphanumericRegex.test(name)) return 'Policy name must start with an alphanumeric character.';\r\n    if (!alphanumericUnderscoreRegex.test(name)) return 'Policy name can only contain alphanumeric characters and underscores.';\r\n    if (!noConsecutiveCharsRegex.test(name)) return 'Policy name cannot contain three consecutive identical characters.';\r\n    return '';\r\n  };\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) > 999) return 'Session timeout must be a number less than or equal to 999.';\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordAttempts = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) > 999) return 'Password attempts must be a number less than or equal to 999.';\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) > 999) return 'Password change duration must be a number less than or equal to 999.';\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) > 999) return 'Password expire notification must be a number less than or equal to 999.';\r\n    return '';\r\n  };\r\n\r\n  const checkDurationVsNotification = () => {\r\n    if (!passwordneverexpires) {\r\n      const duration = Number(passwordchangeduration);\r\n      const notification = Number(passwordexpirenotification);\r\n      if (duration <= notification) {\r\n        setErrors(prev => ({ ...prev, passwordchangeduration: 'Password change duration must be greater than password expiration notification.' }));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setTouched({\r\n      policyname: true,\r\n      sessiontimeout: true,\r\n      passwordattempts: true,\r\n      passwordchangeduration: true,\r\n      passwordexpirenotification: true,\r\n      status: true,\r\n    });\r\n\r\n    const newErrors = {};\r\n\r\n    // Validate each field\r\n    newErrors.policyname = validatePolicyName(policyname);\r\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\r\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\r\n    if (!status) newErrors.status = '*';\r\n\r\n    if (!passwordneverexpires) {\r\n      newErrors.passwordchangeduration = validatePasswordChangeDuration(passwordchangeduration);\r\n      newErrors.passwordexpirenotification = validatePasswordExpireNotification(passwordexpirenotification);\r\n\r\n      if (!checkDurationVsNotification()) {\r\n        newErrors.passwordchangeduration = 'Password change duration must be greater than password expiration notification.';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            policyname,\r\n            sessiontimeout,\r\n            passwordattempts,\r\n            passwordneverexpires,\r\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n            status\r\n          })\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log('Form submitted successfully:', result);\r\n          handleReset();\r\n          toast.success('Form submitted and data stored successfully!');\r\n        } else {\r\n          toast.error('Error submitting form. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        toast.error('An error occurred. Please check the console for details.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e, validator) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n    \r\n    // Update state based on the field\r\n    switch (name) {\r\n      case 'policyname':\r\n        setPolicyname(value);\r\n        break;\r\n      case 'sessiontimeout':\r\n        setSessiontimeout(value);\r\n        break;\r\n      case 'passwordattempts':\r\n        setPasswordAttempts(value);\r\n        break;\r\n      case 'passwordchangeduration':\r\n        setPasswordChangeDuration(value);\r\n        break;\r\n      case 'passwordexpirenotification':\r\n        setPasswordExpireNotification(value);\r\n        break;\r\n      case 'status':\r\n        setStatus(value);\r\n        break;\r\n      case 'passwordneverexpires':\r\n        setPasswordNeverExpires(checked);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Only validate if the field has been touched\r\n    if (touched[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: validator(value) }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.formContainer} id=\"addPolicyForm\">\r\n      <h1>Company IT Policy Master</h1>\r\n      <ToastContainer />\r\n      \r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Policy Name:\r\n          {touched.policyname && (errors.policyname === '*' ? <span className={styles.errorAsterisk}>*</span> : <span className={styles.error}>{errors.policyname}</span>)}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"policyname\"\r\n          value={policyname}\r\n          onChange={(e) => handleChange(e, validatePolicyName)}\r\n          onBlur={() => setTouched(prev => ({ ...prev, policyname: true }))}\r\n        />\r\n        {touched.policyname && errors.policyname && errors.policyname !== '*' && <span className={styles.error}>{errors.policyname}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Session Timeout:\r\n          {touched.sessiontimeout && (errors.sessiontimeout === '*' ? <span className={styles.errorAsterisk}>*</span> : <span className={styles.error}>{errors.sessiontimeout}</span>)}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sessiontimeout\"\r\n          value={sessiontimeout}\r\n          onChange={(e) => handleChange(e, validateSessionTimeout)}\r\n          onBlur={() => setTouched(prev => ({ ...prev, sessiontimeout: true }))}\r\n        />\r\n        {touched.sessiontimeout && errors.sessiontimeout && errors.sessiontimeout !== '*' && <span className={styles.error}>{errors.sessiontimeout}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Password Attempts:\r\n          {touched.passwordattempts && (errors.passwordattempts === '*' ? <span className={styles.errorAsterisk}>*</span> : <span className={styles.error}>{errors.passwordattempts}</span>)}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"passwordattempts\"\r\n          value={passwordattempts}\r\n          onChange={(e) => handleChange(e, validatePasswordAttempts)}\r\n          onBlur={() => setTouched(prev => ({ ...prev, passwordattempts: true }))}\r\n        />\r\n        {touched.passwordattempts && errors.passwordattempts && errors.passwordattempts !== '*' && <span className={styles.error}>{errors.passwordattempts}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Password Never Expires:\r\n        </label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"passwordneverexpires\"\r\n          checked={passwordneverexpires}\r\n          onChange={(e) => handleChange(e, () => '')}\r\n        />\r\n      </div>\r\n\r\n      {!passwordneverexpires && (\r\n        <>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Password Change Duration:\r\n              {touched.passwordchangeduration && (errors.passwordchangeduration === '*' ? <span className={styles.errorAsterisk}>*</span> : <span className={styles.error}>{errors.passwordchangeduration}</span>)}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"passwordchangeduration\"\r\n              value={passwordchangeduration}\r\n              onChange={(e) => handleChange(e, validatePasswordChangeDuration)}\r\n              onBlur={() => setTouched(prev => ({ ...prev, passwordchangeduration: true }))}\r\n            />\r\n            {touched.passwordchangeduration && errors.passwordchangeduration && errors.passwordchangeduration !== '*' && <span className={styles.error}>{errors.passwordchangeduration}</span>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Password Expire Notification:\r\n              {touched.passwordexpirenotification && (errors.passwordexpirenotification === '*' ? <span className={styles.errorAsterisk}>*</span> : <span className={styles.error}>{errors.passwordexpirenotification}</span>)}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"passwordexpirenotification\"\r\n              value={passwordexpirenotification}\r\n              onChange={(e) => handleChange(e, validatePasswordExpireNotification)}\r\n              onBlur={() => setTouched(prev => ({ ...prev, passwordexpirenotification: true }))}\r\n            />\r\n            {touched.passwordexpirenotification && errors.passwordexpirenotification && errors.passwordexpirenotification !== '*' && <span className={styles.error}>{errors.passwordexpirenotification}</span>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Status:\r\n          {touched.status && (errors.status === '*' ? <span className={styles.errorAsterisk}>*</span> : <span className={styles.error}>{errors.status}</span>)}\r\n        </label>\r\n        <select\r\n          name=\"status\"\r\n          value={status}\r\n          onChange={(e) => handleChange(e, () => '')}\r\n          onBlur={() => setTouched(prev => ({ ...prev, status: true }))}\r\n        >\r\n          <option value=\"\">Select</option>\r\n          <option value=\"Active\">Active</option>\r\n          <option value=\"Inactive\">Inactive</option>\r\n        </select>\r\n        {touched.status && errors.status && errors.status !== '*' && <span className={styles.error}>{errors.status}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formActions}>\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"button\" onClick={handleReset}>Reset</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}