{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setPolicyname] = useState('');\n  const [sessiontimeout, setSessiontimeout] = useState('');\n  const [passwordattempts, setPasswordAttempts] = useState('');\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\n  const [status, setStatus] = useState('');\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const navigate = useNavigate();\n  const handleReset = () => {\n    document.getElementById('addPolicyForm').reset();\n    setPolicyname('');\n    setSessiontimeout('');\n    setPasswordAttempts('');\n    setPasswordNeverExpires(false);\n    setPasswordChangeDuration('');\n    setPasswordExpireNotification('');\n    setStatus('');\n    setErrors({});\n    setTouched({});\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  const validatePolicyName = name => {\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\n    if (!startsWithAlphanumericRegex.test(name)) {\n      return 'Policy name must start with an alphanumeric character.';\n    }\n    if (!alphanumericUnderscoreRegex.test(name)) {\n      return 'Policy name can only contain alphanumeric characters and underscores.';\n    }\n    if (!noConsecutiveCharsRegex.test(name)) {\n      return 'Policy name cannot contain three consecutive identical characters.';\n    }\n    return '';\n  };\n  const validateSessionTimeout = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Session timeout must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordAttempts = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password attempts must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordChangeDuration = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password change duration must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordExpireNotification = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password expire notification must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const checkDurationVsNotification = () => {\n    if (!passwordneverexpires) {\n      const duration = Number(passwordchangeduration);\n      const notification = Number(passwordexpirenotification);\n      if (duration <= notification) {\n        setErrors(prev => ({\n          ...prev,\n          passwordchangeduration: 'Password change duration must be greater than password expiration notification.'\n        }));\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleValidation = (name, value) => {\n    let error;\n    switch (name) {\n      case 'policyname':\n        error = validatePolicyName(value);\n        break;\n      case 'sessiontimeout':\n        error = validateSessionTimeout(value);\n        break;\n      case 'passwordattempts':\n        error = validatePasswordAttempts(value);\n        break;\n      case 'passwordchangeduration':\n        error = validatePasswordChangeDuration(value);\n        break;\n      case 'passwordexpirenotification':\n        error = validatePasswordExpireNotification(value);\n        break;\n      default:\n        error = '';\n    }\n    setErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  };\n  const handleBlur = name => {\n    setTouched(prev => ({\n      ...prev,\n      [name]: true\n    }));\n    handleValidation(name, eval(name));\n  };\n  const handleChange = (name, value) => {\n    eval(`set${name.charAt(0).toUpperCase() + name.slice(1)}(value)`);\n    handleValidation(name, value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n    handleValidation('policyname', policyname);\n    handleValidation('sessiontimeout', sessiontimeout);\n    handleValidation('passwordattempts', passwordattempts);\n    handleValidation('passwordchangeduration', passwordchangeduration);\n    handleValidation('passwordexpirenotification', passwordexpirenotification);\n    if (!status) {\n      newErrors.status = '*';\n    }\n    if (!passwordneverexpires && !checkDurationVsNotification()) {\n      newErrors.passwordchangeduration = 'Password change duration must be greater than password expiration notification.';\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            policyname,\n            sessiontimeout,\n            passwordattempts,\n            passwordneverexpires,\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n            status\n          })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log('Form submitted successfully:', result);\n          handleReset();\n          toast.success('Form submitted and data stored successfully!');\n        } else {\n          toast.error('Error submitting form. Please try again.');\n        }\n      } catch (error) {\n        toast.error('An error occurred. Please check the console for details.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Policy Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: policyname,\n        onChange: e => handleChange('policyname', e.target.value),\n        onBlur: () => handleBlur('policyname')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), touched.policyname && errors.policyname && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.policyname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Session Timeout:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sessiontimeout,\n        onChange: e => handleChange('sessiontimeout', e.target.value),\n        onBlur: () => handleBlur('sessiontimeout')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), touched.sessiontimeout && errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.sessiontimeout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Attempts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: passwordattempts,\n        onChange: e => handleChange('passwordattempts', e.target.value),\n        onBlur: () => handleBlur('passwordattempts')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), touched.passwordattempts && errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.passwordattempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Never Expires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: passwordneverexpires,\n        onChange: e => setPasswordNeverExpires(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Change Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordchangeduration,\n          onChange: e => handleChange('passwordchangeduration', e.target.value),\n          onBlur: () => handleBlur('passwordchangeduration')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), touched.passwordchangeduration && errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordchangeduration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Expire Notification:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordexpirenotification,\n          onChange: e => handleChange('passwordexpirenotification', e.target.value),\n          onBlur: () => handleBlur('passwordexpirenotification')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), touched.passwordexpirenotification && errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordexpirenotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 91\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Inactive\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRedirect,\n        children: \"Go to Policy List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPolicy, \"pb/om729o4xEqQ6RetOT206J9vY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","styles","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPolicy","_s","policyname","setPolicyname","sessiontimeout","setSessiontimeout","passwordattempts","setPasswordAttempts","passwordneverexpires","setPasswordNeverExpires","passwordchangeduration","setPasswordChangeDuration","passwordexpirenotification","setPasswordExpireNotification","status","setStatus","errors","setErrors","touched","setTouched","navigate","handleReset","document","getElementById","reset","handleRedirect","validatePolicyName","name","alphanumericUnderscoreRegex","startsWithAlphanumericRegex","noConsecutiveCharsRegex","test","validateSessionTimeout","value","isNaN","Number","validatePasswordAttempts","validatePasswordChangeDuration","validatePasswordExpireNotification","checkDurationVsNotification","duration","notification","prev","handleValidation","error","handleBlur","eval","handleChange","charAt","toUpperCase","slice","handleSubmit","e","preventDefault","newErrors","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","success","onSubmit","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","type","onChange","target","onBlur","checked","buttonContainer","onClick","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddPolicy.module.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setPolicyname] = useState('');\r\n  const [sessiontimeout, setSessiontimeout] = useState('');\r\n  const [passwordattempts, setPasswordAttempts] = useState('');\r\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\r\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\r\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('addPolicyForm').reset(); \r\n    setPolicyname('');\r\n    setSessiontimeout('');\r\n    setPasswordAttempts('');\r\n    setPasswordNeverExpires(false);\r\n    setPasswordChangeDuration('');\r\n    setPasswordExpireNotification('');\r\n    setStatus('');\r\n    setErrors({});\r\n    setTouched({});\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy');\r\n  };\r\n\r\n  const validatePolicyName = (name) => {\r\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\r\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\r\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\r\n\r\n    if (!startsWithAlphanumericRegex.test(name)) {\r\n      return 'Policy name must start with an alphanumeric character.';\r\n    }\r\n    if (!alphanumericUnderscoreRegex.test(name)) {\r\n      return 'Policy name can only contain alphanumeric characters and underscores.';\r\n    }\r\n    if (!noConsecutiveCharsRegex.test(name)) {\r\n      return 'Policy name cannot contain three consecutive identical characters.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Session timeout must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordAttempts = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password attempts must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password change duration must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password expire notification must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const checkDurationVsNotification = () => {\r\n    if (!passwordneverexpires) {\r\n      const duration = Number(passwordchangeduration);\r\n      const notification = Number(passwordexpirenotification);\r\n      if (duration <= notification) {\r\n        setErrors(prev => ({ ...prev, passwordchangeduration: 'Password change duration must be greater than password expiration notification.' }));\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleValidation = (name, value) => {\r\n    let error;\r\n    switch (name) {\r\n      case 'policyname':\r\n        error = validatePolicyName(value);\r\n        break;\r\n      case 'sessiontimeout':\r\n        error = validateSessionTimeout(value);\r\n        break;\r\n      case 'passwordattempts':\r\n        error = validatePasswordAttempts(value);\r\n        break;\r\n      case 'passwordchangeduration':\r\n        error = validatePasswordChangeDuration(value);\r\n        break;\r\n      case 'passwordexpirenotification':\r\n        error = validatePasswordExpireNotification(value);\r\n        break;\r\n      default:\r\n        error = '';\r\n    }\r\n    setErrors(prev => ({ ...prev, [name]: error }));\r\n  };\r\n\r\n  const handleBlur = (name) => {\r\n    setTouched(prev => ({ ...prev, [name]: true }));\r\n    handleValidation(name, eval(name));\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    eval(`set${name.charAt(0).toUpperCase() + name.slice(1)}(value)`);\r\n    handleValidation(name, value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n\r\n    handleValidation('policyname', policyname);\r\n    handleValidation('sessiontimeout', sessiontimeout);\r\n    handleValidation('passwordattempts', passwordattempts);\r\n    handleValidation('passwordchangeduration', passwordchangeduration);\r\n    handleValidation('passwordexpirenotification', passwordexpirenotification);\r\n\r\n    if (!status) {\r\n      newErrors.status = '*';\r\n    }\r\n\r\n    if (!passwordneverexpires && !checkDurationVsNotification()) {\r\n      newErrors.passwordchangeduration = 'Password change duration must be greater than password expiration notification.';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            policyname,\r\n            sessiontimeout,\r\n            passwordattempts,\r\n            passwordneverexpires,\r\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n            status\r\n          })\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log('Form submitted successfully:', result);\r\n          handleReset();\r\n          toast.success('Form submitted and data stored successfully!');\r\n        } else {\r\n          toast.error('Error submitting form. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        toast.error('An error occurred. Please check the console for details.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.formContainer} id=\"addPolicyForm\">\r\n      <h1>Company IT Policy Master</h1>\r\n      <ToastContainer />\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Policy Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={policyname}\r\n          onChange={(e) => handleChange('policyname', e.target.value)}\r\n          onBlur={() => handleBlur('policyname')}\r\n        />\r\n        {(touched.policyname && errors.policyname) && <span className={styles.error}>{errors.policyname}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Session Timeout:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={sessiontimeout}\r\n          onChange={(e) => handleChange('sessiontimeout', e.target.value)}\r\n          onBlur={() => handleBlur('sessiontimeout')}\r\n        />\r\n        {(touched.sessiontimeout && errors.sessiontimeout) && <span className={styles.error}>{errors.sessiontimeout}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Password Attempts:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={passwordattempts}\r\n          onChange={(e) => handleChange('passwordattempts', e.target.value)}\r\n          onBlur={() => handleBlur('passwordattempts')}\r\n        />\r\n        {(touched.passwordattempts && errors.passwordattempts) && <span className={styles.error}>{errors.passwordattempts}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Password Never Expires:</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={passwordneverexpires}\r\n          onChange={(e) => setPasswordNeverExpires(e.target.checked)}\r\n        />\r\n      </div>\r\n\r\n      {!passwordneverexpires && (\r\n        <>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Change Duration:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={passwordchangeduration}\r\n              onChange={(e) => handleChange('passwordchangeduration', e.target.value)}\r\n              onBlur={() => handleBlur('passwordchangeduration')}\r\n            />\r\n            {(touched.passwordchangeduration && errors.passwordchangeduration) && <span className={styles.error}>{errors.passwordchangeduration}</span>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Expire Notification:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={passwordexpirenotification}\r\n              onChange={(e) => handleChange('passwordexpirenotification', e.target.value)}\r\n              onBlur={() => handleBlur('passwordexpirenotification')}\r\n            />\r\n            {(touched.passwordexpirenotification && errors.passwordexpirenotification) && <span className={styles.error}>{errors.passwordexpirenotification}</span>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>Status:</label>\r\n        <select\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n        >\r\n          <option value=\"\">Select</option>\r\n          <option value=\"Active\">Active</option>\r\n          <option value=\"Inactive\">Inactive</option>\r\n        </select>\r\n        {errors.status && <span className={styles.error}>{errors.status}</span>}\r\n      </div>\r\n\r\n      <div className={styles.buttonContainer}>\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"button\" onClick={handleReset}>Reset</button>\r\n        <button type=\"button\" onClick={handleRedirect}>Go to Policy List</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}