{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\EditPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from './AddPolicy.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPolicy = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [policy, setPolicy] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    policyname: '',\n    sessiontimeout: '',\n    passwordattempts: '',\n    passwordneverexpires: false,\n    passwordchangeduration: '',\n    passwordexpirenotification: '',\n    status: 1\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPolicyById = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          if (data) {\n            setPolicy(data);\n            setFormData({\n              policyname: data.policyname,\n              sessiontimeout: data.sessiontimeout,\n              passwordattempts: data.passwordattempts,\n              passwordneverexpires: data.passwordneverexpires,\n              passwordchangeduration: data.passwordchangeduration,\n              passwordexpirenotification: data.passwordexpirenotification,\n              status: data.status\n            });\n            setLoading(false);\n          } else {\n            navigate('/GetPolicy');\n          }\n        } else {\n          navigate('/GetPolicy');\n        }\n      } catch (error) {\n        console.error('Error fetching policy:', error);\n        navigate('/GetPolicy');\n      }\n    };\n    fetchPolicyById();\n  }, [id, navigate]);\n  const validateSessionTimeout = value => {\n    if (!value) {\n      return {\n        sessiontimeout: 'Session Timeout cannot be empty.'\n      };\n    } else if (isNaN(value) || value < 1 || value > 999) {\n      return {\n        sessiontimeout: 'Session Timeout must be a number between 1 and 999.'\n      };\n    }\n    return {};\n  };\n  const validatePasswordAttempts = value => {\n    if (!value) {\n      return {\n        passwordattempts: 'Password Attempts cannot be empty.'\n      };\n    } else if (isNaN(value) || value < 1 || value > 10) {\n      return {\n        passwordattempts: 'Password Attempts must be a number between 1 and 10.'\n      };\n    }\n    return {};\n  };\n  const validatePasswordChangeDuration = value => {\n    if (!value) {\n      return {\n        passwordchangeduration: 'Password Change Duration cannot be empty.'\n      };\n    } else if (isNaN(value) || value < 1 || value > 999) {\n      return {\n        passwordchangeduration: 'Password Change Duration must be a number between 1 and 999.'\n      };\n    }\n    return {};\n  };\n  const validatePasswordExpireNotification = value => {\n    if (!value) {\n      return {\n        passwordexpirenotification: 'Password Expire Notification cannot be empty.'\n      };\n    } else if (isNaN(value) || value < 1 || value > 999) {\n      return {\n        passwordexpirenotification: 'Password Expire Notification must be a number between 1 and 999.'\n      };\n    }\n    return {};\n  };\n  const validateStatus = value => {\n    if (!value) {\n      return {\n        status: 'Please select a status.'\n      };\n    }\n    return {};\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setFormData(prevFormData => {\n      const newData = {\n        ...prevFormData,\n        [name]: newValue\n      };\n      if (name === 'passwordneverexpires') {\n        if (checked) {\n          newData.passwordchangeduration = '';\n          newData.passwordexpirenotification = '';\n          setErrors(prevErrors => {\n            const newErrors = {\n              ...prevErrors\n            };\n            delete newErrors.passwordchangeduration;\n            delete newErrors.passwordexpirenotification;\n            return newErrors;\n          });\n        }\n      }\n      return newData;\n    });\n\n    // Validate and update errors\n    if (name === 'sessiontimeout') {\n      const errors = validateSessionTimeout(value);\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        ...errors\n      }));\n    } else if (name === 'passwordattempts') {\n      const errors = validatePasswordAttempts(value);\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        ...errors\n      }));\n    } else if (name === 'passwordchangeduration') {\n      if (!formData.passwordneverexpires) {\n        const errors = validatePasswordChangeDuration(value);\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          ...errors\n        }));\n      } else {\n        setErrors(prevErrors => {\n          const newErrors = {\n            ...prevErrors\n          };\n          delete newErrors.passwordchangeduration;\n          return newErrors;\n        });\n      }\n    } else if (name === 'passwordexpirenotification') {\n      if (!formData.passwordneverexpires) {\n        const errors = validatePasswordExpireNotification(value);\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          ...errors\n        }));\n      } else {\n        setErrors(prevErrors => {\n          const newErrors = {\n            ...prevErrors\n          };\n          delete newErrors.passwordexpirenotification;\n          return newErrors;\n        });\n      }\n    } else if (name === 'status') {\n      const errors = validateStatus(value);\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        ...errors\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate all fields\n    const sessionTimeoutErrors = validateSessionTimeout(formData.sessiontimeout);\n    const passwordAttemptsErrors = validatePasswordAttempts(formData.passwordattempts);\n    const passwordChangeDurationErrors = formData.passwordneverexpires ? {} : validatePasswordChangeDuration(formData.passwordchangeduration);\n    const passwordExpireNotificationErrors = formData.passwordneverexpires ? {} : validatePasswordExpireNotification(formData.passwordexpirenotification);\n    const statusErrors = validateStatus(formData.status);\n    const validationErrors = {\n      ...sessionTimeoutErrors,\n      ...passwordAttemptsErrors,\n      ...passwordChangeDurationErrors,\n      ...passwordExpireNotificationErrors,\n      ...statusErrors\n    };\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData,\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification\n        })\n      });\n      if (response.ok) {\n        alert('Policy updated successfully!');\n        navigate('/GetPolicy');\n      } else {\n        alert('Failed to update policy');\n      }\n    } catch (error) {\n      console.error('Error updating policy:', error);\n      alert('An error occurred while updating the policy.');\n    }\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  const handleReset = () => {\n    setFormData({\n      policyname: formData.policyname,\n      sessiontimeout: '',\n      passwordattempts: '',\n      passwordneverexpires: false,\n      passwordchangeduration: '',\n      passwordexpirenotification: '',\n      status: ''\n    });\n    setErrors({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading policy...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Policy Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"policyname\",\n          value: formData.policyname,\n          onChange: handleInputChange,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Session Timeout:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"sessiontimeout\",\n          value: formData.sessiontimeout,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.sessiontimeout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Attempts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"passwordattempts\",\n          value: formData.passwordattempts,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordattempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Never Expires:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"passwordneverexpires\",\n          checked: formData.passwordneverexpires,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), !formData.passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password Change Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"passwordchangeduration\",\n            value: formData.passwordchangeduration,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.passwordchangeduration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password Expire Notification:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"passwordexpirenotification\",\n            value: formData.passwordexpirenotification,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errors.passwordexpirenotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          value: formData.status,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), errors.status && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        className: styles.ResetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRedirect,\n        className: styles.ListButton,\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPolicy, \"DEqegRCETfjhxdjB6um/FFMfucM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPolicy;\nexport default EditPolicy;\nvar _c;\n$RefreshReg$(_c, \"EditPolicy\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPolicy","_s","id","policy","setPolicy","loading","setLoading","formData","setFormData","policyname","sessiontimeout","passwordattempts","passwordneverexpires","passwordchangeduration","passwordexpirenotification","status","errors","setErrors","navigate","fetchPolicyById","response","fetch","ok","data","json","error","console","validateSessionTimeout","value","isNaN","validatePasswordAttempts","validatePasswordChangeDuration","validatePasswordExpireNotification","validateStatus","handleInputChange","e","name","type","checked","target","newValue","prevFormData","newData","prevErrors","newErrors","handleSubmit","preventDefault","sessionTimeoutErrors","passwordAttemptsErrors","passwordChangeDurationErrors","passwordExpireNotificationErrors","statusErrors","validationErrors","Object","keys","length","method","headers","body","JSON","stringify","alert","handleRedirect","handleReset","className","formContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formGroup","onChange","readOnly","submitButton","onClick","ResetButton","ListButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/EditPolicy.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from './AddPolicy.module.css';\r\n\r\nconst EditPolicy = () => {\r\n  const { id } = useParams();\r\n  const [policy, setPolicy] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    policyname: '',\r\n    sessiontimeout: '',\r\n    passwordattempts: '',\r\n    passwordneverexpires: false,\r\n    passwordchangeduration: '',\r\n    passwordexpirenotification: '',\r\n    status: 1,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPolicyById = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data) {\r\n            setPolicy(data);\r\n            setFormData({\r\n              policyname: data.policyname,\r\n              sessiontimeout: data.sessiontimeout,\r\n              passwordattempts: data.passwordattempts,\r\n              passwordneverexpires: data.passwordneverexpires,\r\n              passwordchangeduration: data.passwordchangeduration,\r\n              passwordexpirenotification: data.passwordexpirenotification,\r\n              status: data.status,\r\n            });\r\n            setLoading(false);\r\n          } else {\r\n            navigate('/GetPolicy');\r\n          }\r\n        } else {\r\n          navigate('/GetPolicy');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching policy:', error);\r\n        navigate('/GetPolicy');\r\n      }\r\n    };\r\n\r\n    fetchPolicyById();\r\n  }, [id, navigate]);\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (!value) {\r\n      return { sessiontimeout: 'Session Timeout cannot be empty.' };\r\n    } else if (isNaN(value) || value < 1 || value > 999) {\r\n      return { sessiontimeout: 'Session Timeout must be a number between 1 and 999.' };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const validatePasswordAttempts = (value) => {\r\n    if (!value) {\r\n      return { passwordattempts: 'Password Attempts cannot be empty.' };\r\n    } else if (isNaN(value) || value < 1 || value > 10) {\r\n      return { passwordattempts: 'Password Attempts must be a number between 1 and 10.' };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (!value) {\r\n      return { passwordchangeduration: 'Password Change Duration cannot be empty.' };\r\n    } else if (isNaN(value) || value < 1 || value > 999) {\r\n      return { passwordchangeduration: 'Password Change Duration must be a number between 1 and 999.' };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (!value) {\r\n      return { passwordexpirenotification: 'Password Expire Notification cannot be empty.' };\r\n    } else if (isNaN(value) || value < 1 || value > 999) {\r\n      return { passwordexpirenotification: 'Password Expire Notification must be a number between 1 and 999.' };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const validateStatus = (value) => {\r\n    if (!value) {\r\n      return { status: 'Please select a status.' };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const newValue = type === 'checkbox' ? checked : value;\r\n\r\n    setFormData(prevFormData => {\r\n      const newData = {\r\n        ...prevFormData,\r\n        [name]: newValue,\r\n      };\r\n\r\n      if (name === 'passwordneverexpires') {\r\n        if (checked) {\r\n          newData.passwordchangeduration = '';\r\n          newData.passwordexpirenotification = '';\r\n          setErrors(prevErrors => {\r\n            const newErrors = { ...prevErrors };\r\n            delete newErrors.passwordchangeduration;\r\n            delete newErrors.passwordexpirenotification;\r\n            return newErrors;\r\n          });\r\n        }\r\n      }\r\n\r\n      return newData;\r\n    });\r\n\r\n    // Validate and update errors\r\n    if (name === 'sessiontimeout') {\r\n      const errors = validateSessionTimeout(value);\r\n      setErrors(prevErrors => ({ ...prevErrors, ...errors }));\r\n    } else if (name === 'passwordattempts') {\r\n      const errors = validatePasswordAttempts(value);\r\n      setErrors(prevErrors => ({ ...prevErrors, ...errors }));\r\n    } else if (name === 'passwordchangeduration') {\r\n      if (!formData.passwordneverexpires) {\r\n        const errors = validatePasswordChangeDuration(value);\r\n        setErrors(prevErrors => ({ ...prevErrors, ...errors }));\r\n      } else {\r\n        setErrors(prevErrors => {\r\n          const newErrors = { ...prevErrors };\r\n          delete newErrors.passwordchangeduration;\r\n          return newErrors;\r\n        });\r\n      }\r\n    } else if (name === 'passwordexpirenotification') {\r\n      if (!formData.passwordneverexpires) {\r\n        const errors = validatePasswordExpireNotification(value);\r\n        setErrors(prevErrors => ({ ...prevErrors, ...errors }));\r\n      } else {\r\n        setErrors(prevErrors => {\r\n          const newErrors = { ...prevErrors };\r\n          delete newErrors.passwordexpirenotification;\r\n          return newErrors;\r\n        });\r\n      }\r\n    } else if (name === 'status') {\r\n      const errors = validateStatus(value);\r\n      setErrors(prevErrors => ({ ...prevErrors, ...errors }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate all fields\r\n    const sessionTimeoutErrors = validateSessionTimeout(formData.sessiontimeout);\r\n    const passwordAttemptsErrors = validatePasswordAttempts(formData.passwordattempts);\r\n    const passwordChangeDurationErrors = formData.passwordneverexpires ? {} : validatePasswordChangeDuration(formData.passwordchangeduration);\r\n    const passwordExpireNotificationErrors = formData.passwordneverexpires ? {} : validatePasswordExpireNotification(formData.passwordexpirenotification);\r\n    const statusErrors = validateStatus(formData.status);\r\n    const validationErrors = {\r\n      ...sessionTimeoutErrors,\r\n      ...passwordAttemptsErrors,\r\n      ...passwordChangeDurationErrors,\r\n      ...passwordExpireNotificationErrors,\r\n      ...statusErrors\r\n    };\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\r\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Policy updated successfully!');\r\n        navigate('/GetPolicy');\r\n      } else {\r\n        alert('Failed to update policy');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating policy:', error);\r\n      alert('An error occurred while updating the policy.');\r\n    }\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy');\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      policyname: formData.policyname,\r\n      sessiontimeout: '',\r\n      passwordattempts: '',\r\n      passwordneverexpires: false,\r\n      passwordchangeduration: '',\r\n      passwordexpirenotification: '',\r\n      status: '',\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      {loading ? (\r\n        <p>Loading policy...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className={styles.formGroup}>\r\n            <label>Policy Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"policyname\"\r\n              value={formData.policyname}\r\n              onChange={handleInputChange}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Session Timeout:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"sessiontimeout\"\r\n              value={formData.sessiontimeout}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.sessiontimeout && <p className={styles.error}>{errors.sessiontimeout}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Attempts:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"passwordattempts\"\r\n              value={formData.passwordattempts}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.passwordattempts && <p className={styles.error}>{errors.passwordattempts}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Never Expires:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"passwordneverexpires\"\r\n              checked={formData.passwordneverexpires}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {!formData.passwordneverexpires && (\r\n            <>\r\n              <div className={styles.formGroup}>\r\n                <label>Password Change Duration:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"passwordchangeduration\"\r\n                  value={formData.passwordchangeduration}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordchangeduration && <p className={styles.error}>{errors.passwordchangeduration}</p>}\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Password Expire Notification:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"passwordexpirenotification\"\r\n                  value={formData.passwordexpirenotification}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordexpirenotification && <p className={styles.error}>{errors.passwordexpirenotification}</p>}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className={styles.formGroup}>\r\n            <label>Status:</label>\r\n            <select\r\n              name=\"status\"\r\n              value={formData.status}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"1\">Active</option>\r\n              <option value=\"2\">Inactive</option>\r\n            </select>\r\n            {errors.status && <p className={styles.error}>{errors.status}</p>}\r\n          </div>\r\n          <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n          <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n          <button type=\"button\" onClick={handleRedirect} className={styles.ListButton}>List</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPolicy;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}