{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams,useNavigate}from'react-router-dom';import styles from'./AddPolicy.module.css';import{toast}from'react-toastify';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const EditPolicy=()=>{const{id}=useParams();const[policy,setPolicy]=useState(null);const[loading,setLoading]=useState(true);const[formData,setFormData]=useState({policyname:'',sessiontimeout:'',passwordattempts:'',passwordneverexpires:false,passwordchangeduration:'',passwordexpirenotification:'',status:''});const[errors,setErrors]=useState({});const[submitted,setSubmitted]=useState(false);// Track form submission\nconst navigate=useNavigate();useEffect(()=>{const fetchPolicyById=async()=>{try{const response=await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);if(response.ok){const data=await response.json();if(data){setPolicy(data);setFormData({policyname:data.policyname,sessiontimeout:data.sessiontimeout,passwordattempts:data.passwordattempts,passwordneverexpires:data.passwordneverexpires,passwordchangeduration:data.passwordchangeduration,passwordexpirenotification:data.passwordexpirenotification,status:data.status});setLoading(false);}else{navigate('/GetPolicy');}}else{navigate('/GetPolicy');}}catch(error){toast.error('Error fetching policy:',error);navigate('/GetPolicy');}};fetchPolicyById();},[id,navigate]);const validateFormData=data=>{const errors={};// Helper function to check if a value is not null, not empty, and is a string\nconst isNonEmptyString=value=>typeof value==='string'&&value.trim()!=='';// Validate Session Timeout\nif(isNonEmptyString(data.sessiontimeout)){const sessionTimeout=parseInt(data.sessiontimeout,10);if(isNaN(sessionTimeout)||sessionTimeout<1||sessionTimeout>999){errors.sessiontimeout='Session Timeout must be a number between 1 and 999.';}}// Validate Password Attempts\nif(isNonEmptyString(data.passwordattempts)){const passwordAttempts=parseInt(data.passwordattempts,10);if(isNaN(passwordAttempts)||passwordAttempts<1||passwordAttempts>999){errors.passwordattempts='Password Attempts must be a number between 1 and 999.';}}// Validate Password Change Duration\nif(!data.passwordneverexpires){if(isNonEmptyString(data.passwordchangeduration)){const passwordChangeDuration=parseInt(data.passwordchangeduration,10);if(isNaN(passwordChangeDuration)||passwordChangeDuration<1||passwordChangeDuration>999){errors.passwordchangeduration='Password Change Duration must be a number between 1 and 999.';}}// Validate Password Expire Notification\nif(isNonEmptyString(data.passwordexpirenotification)){const passwordExpireNotification=parseInt(data.passwordexpirenotification,10);if(isNaN(passwordExpireNotification)||passwordExpireNotification<1||passwordExpireNotification>999){errors.passwordexpirenotification='Password Expire Notification must be a number between 1 and 999.';}}}// Validate Status\nif(isNonEmptyString(data.status)){if(!data.status){errors.status='Please select a status.';}}return errors;};const handleInputChange=e=>{const{name,value,type,checked}=e.target;let newValue=type==='checkbox'?checked:value;// Use `let` here for reassignment\nsetFormData(prevFormData=>{let updatedFormData={...prevFormData,[name]:newValue};// Restrict non-numeric input for specific fields\nif(['sessiontimeout','passwordattempts','passwordchangeduration','passwordexpirenotification'].includes(name)){const numericValue=newValue.replace(/[^0-9]/g,'');// Allow only numeric values\nupdatedFormData[name]=numericValue;// Update the specific field with numeric value\n}// Clear password fields if `passwordneverexpires` is checked\nif(name==='passwordneverexpires'&&checked){updatedFormData.passwordchangeduration='';updatedFormData.passwordexpirenotification='';}return updatedFormData;});// Validate the form data on change\nconst validationErrors=validateFormData({...formData,[name]:newValue});setErrors(validationErrors);};const handleSubmit=async e=>{e.preventDefault();setSubmitted(true);// Set the submitted state to true\n// Validate all fields\nconst validationErrors=validateFormData(formData);if(Object.keys(validationErrors).length>0){setErrors(validationErrors);return;}try{const response=await fetch(`http://localhost:5000/api/EditPolicy/${id}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({...formData,passwordchangeduration:formData.passwordneverexpires?null:formData.passwordchangeduration,passwordexpirenotification:formData.passwordneverexpires?null:formData.passwordexpirenotification})});if(response.ok){//alert('Policy updated successfully!');\ntoast.success('Policy updated successfully!');//navigate('/GetPolicy');\n}else{toast.error('Failed to update policy');}}catch(error){console.error('Error updating policy:',error);toast.error('An error occurred while updating the policy.');}};const handleRedirect=()=>{navigate('/GetPolicy');};const handleReset=()=>{setFormData({policyname:formData.policyname,sessiontimeout:'',passwordattempts:'',passwordneverexpires:false,passwordchangeduration:'',passwordexpirenotification:'',status:''});setErrors({});setSubmitted(false);// Reset the submitted state\n};return/*#__PURE__*/_jsx(\"div\",{className:styles.formContainer,children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading policy...\"}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Policy Name: \",submitted&&!formData.policyname&&/*#__PURE__*/_jsx(\"span\",{className:styles.requiredAsterisk,children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"policyname\",value:formData.policyname,onChange:handleInputChange,readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Session Timeout: \",submitted&&!formData.sessiontimeout&&/*#__PURE__*/_jsx(\"span\",{className:styles.requiredAsterisk,children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"sessiontimeout\",value:formData.sessiontimeout,onChange:handleInputChange}),errors.sessiontimeout&&/*#__PURE__*/_jsx(\"p\",{className:styles.error,children:errors.sessiontimeout})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Password Attempts: \",submitted&&!formData.passwordattempts&&/*#__PURE__*/_jsx(\"span\",{className:styles.requiredAsterisk,children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"passwordattempts\",value:formData.passwordattempts,onChange:handleInputChange}),errors.passwordattempts&&/*#__PURE__*/_jsx(\"p\",{className:styles.error,children:errors.passwordattempts})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password Never Expires:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"passwordneverexpires\",checked:formData.passwordneverexpires,onChange:handleInputChange})]}),!formData.passwordneverexpires&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Password Change Duration: \",submitted&&!formData.passwordchangeduration&&/*#__PURE__*/_jsx(\"span\",{className:styles.requiredAsterisk,children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"passwordchangeduration\",value:formData.passwordchangeduration,onChange:handleInputChange}),errors.passwordchangeduration&&/*#__PURE__*/_jsx(\"p\",{className:styles.error,children:errors.passwordchangeduration})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Password Expire Notification: \",submitted&&!formData.passwordexpirenotification&&/*#__PURE__*/_jsx(\"span\",{className:styles.requiredAsterisk,children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"passwordexpirenotification\",value:formData.passwordexpirenotification,onChange:handleInputChange}),errors.passwordexpirenotification&&/*#__PURE__*/_jsx(\"p\",{className:styles.error,children:errors.passwordexpirenotification})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.formGroup,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Status: \",submitted&&!formData.status&&/*#__PURE__*/_jsx(\"span\",{className:styles.requiredAsterisk,children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",{name:\"status\",value:formData.status,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"Active\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"Inactive\"})]}),errors.status&&/*#__PURE__*/_jsx(\"p\",{className:styles.error,children:errors.status})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:styles.submitButton,children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleReset,className:styles.ResetButton,children:\"Reset\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleRedirect,className:styles.ListButton,children:\"List\"})]})});};export default EditPolicy;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","styles","toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EditPolicy","id","policy","setPolicy","loading","setLoading","formData","setFormData","policyname","sessiontimeout","passwordattempts","passwordneverexpires","passwordchangeduration","passwordexpirenotification","status","errors","setErrors","submitted","setSubmitted","navigate","fetchPolicyById","response","fetch","ok","data","json","error","validateFormData","isNonEmptyString","value","trim","sessionTimeout","parseInt","isNaN","passwordAttempts","passwordChangeDuration","passwordExpireNotification","handleInputChange","e","name","type","checked","target","newValue","prevFormData","updatedFormData","includes","numericValue","replace","validationErrors","handleSubmit","preventDefault","Object","keys","length","method","headers","body","JSON","stringify","success","console","handleRedirect","handleReset","className","formContainer","children","onSubmit","formGroup","requiredAsterisk","onChange","readOnly","submitButton","onClick","ResetButton","ListButton"],"sources":["E:/companyitpolicymodule/src/components/EditPolicy.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from './AddPolicy.module.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst EditPolicy = () => {\r\n  const { id } = useParams();\r\n  const [policy, setPolicy] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    policyname: '',\r\n    sessiontimeout: '',\r\n    passwordattempts: '',\r\n    passwordneverexpires: false,\r\n    passwordchangeduration: '',\r\n    passwordexpirenotification: '',\r\n    status: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false); // Track form submission\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPolicyById = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data) {\r\n            setPolicy(data);\r\n            setFormData({\r\n              policyname: data.policyname,\r\n              sessiontimeout: data.sessiontimeout,\r\n              passwordattempts: data.passwordattempts,\r\n              passwordneverexpires: data.passwordneverexpires,\r\n              passwordchangeduration: data.passwordchangeduration,\r\n              passwordexpirenotification: data.passwordexpirenotification,\r\n              status: data.status,\r\n            });\r\n            setLoading(false);\r\n          } else {\r\n\r\n            navigate('/GetPolicy');\r\n          }\r\n        } else {\r\n          navigate('/GetPolicy');\r\n        }\r\n      } catch (error) {\r\n        toast.error('Error fetching policy:', error);\r\n        navigate('/GetPolicy');\r\n      }\r\n    };\r\n\r\n    fetchPolicyById();\r\n  }, [id, navigate]);\r\n\r\n  const validateFormData = (data) => {\r\n    const errors = {};\r\n  \r\n    // Helper function to check if a value is not null, not empty, and is a string\r\n    const isNonEmptyString = (value) => typeof value === 'string' && value.trim() !== '';\r\n  \r\n    // Validate Session Timeout\r\n    if (isNonEmptyString(data.sessiontimeout)) {\r\n      const sessionTimeout = parseInt(data.sessiontimeout, 10);\r\n      if (isNaN(sessionTimeout) || sessionTimeout < 1 || sessionTimeout > 999) {\r\n        errors.sessiontimeout = 'Session Timeout must be a number between 1 and 999.';\r\n      }\r\n    }\r\n  \r\n    // Validate Password Attempts\r\n    if (isNonEmptyString(data.passwordattempts)) {\r\n      const passwordAttempts = parseInt(data.passwordattempts, 10);\r\n      if (isNaN(passwordAttempts) || passwordAttempts < 1 || passwordAttempts > 999) {\r\n        errors.passwordattempts = 'Password Attempts must be a number between 1 and 999.';\r\n      }\r\n    }\r\n  \r\n    // Validate Password Change Duration\r\n    if (!data.passwordneverexpires) {\r\n      if (isNonEmptyString(data.passwordchangeduration)) {\r\n        const passwordChangeDuration = parseInt(data.passwordchangeduration, 10);\r\n        if (isNaN(passwordChangeDuration) || passwordChangeDuration < 1 || passwordChangeDuration > 999) {\r\n          errors.passwordchangeduration = 'Password Change Duration must be a number between 1 and 999.';\r\n        }\r\n      }\r\n  \r\n      // Validate Password Expire Notification\r\n      if (isNonEmptyString(data.passwordexpirenotification)) {\r\n        const passwordExpireNotification = parseInt(data.passwordexpirenotification, 10);\r\n        if (isNaN(passwordExpireNotification) || passwordExpireNotification < 1 || passwordExpireNotification > 999) {\r\n          errors.passwordexpirenotification = 'Password Expire Notification must be a number between 1 and 999.';\r\n        }\r\n      }\r\n    }\r\n  \r\n    // Validate Status\r\n    if (isNonEmptyString(data.status)) {\r\n      if (!data.status) {\r\n        errors.status = 'Please select a status.';\r\n      }\r\n    }\r\n  \r\n    return errors;\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    let newValue = type === 'checkbox' ? checked : value; // Use `let` here for reassignment\r\n  \r\n    setFormData((prevFormData) => {\r\n      let updatedFormData = {\r\n        ...prevFormData,\r\n        [name]: newValue,\r\n      };\r\n  \r\n      // Restrict non-numeric input for specific fields\r\n      if (['sessiontimeout', 'passwordattempts', 'passwordchangeduration', 'passwordexpirenotification'].includes(name)) {\r\n        const numericValue = newValue.replace(/[^0-9]/g, ''); // Allow only numeric values\r\n        updatedFormData[name] = numericValue; // Update the specific field with numeric value\r\n      }\r\n  \r\n      // Clear password fields if `passwordneverexpires` is checked\r\n      if (name === 'passwordneverexpires' && checked) {\r\n        updatedFormData.passwordchangeduration = '';\r\n        updatedFormData.passwordexpirenotification = '';\r\n      }\r\n  \r\n      return updatedFormData;\r\n    });\r\n  \r\n    // Validate the form data on change\r\n    const validationErrors = validateFormData({\r\n      ...formData,\r\n      [name]: newValue,\r\n    });\r\n    setErrors(validationErrors);\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true); // Set the submitted state to true\r\n\r\n    // Validate all fields\r\n    const validationErrors = validateFormData(formData);\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\r\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        //alert('Policy updated successfully!');\r\n        toast.success('Policy updated successfully!');\r\n        //navigate('/GetPolicy');\r\n      } else {\r\n        toast.error('Failed to update policy');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating policy:', error);\r\n      toast.error('An error occurred while updating the policy.');\r\n    }\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy');\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      policyname: formData.policyname,\r\n      sessiontimeout: '',\r\n      passwordattempts: '',\r\n      passwordneverexpires: false,\r\n      passwordchangeduration: '',\r\n      passwordexpirenotification: '',\r\n      status: '',\r\n\r\n    });\r\n    setErrors({});\r\n    setSubmitted(false); // Reset the submitted state\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      {loading ? (\r\n        <p>Loading policy...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Policy Name: {submitted && !formData.policyname && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"policyname\"\r\n              value={formData.policyname}\r\n              onChange={handleInputChange}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Session Timeout: {submitted && !formData.sessiontimeout && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"sessiontimeout\"\r\n              value={formData.sessiontimeout}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.sessiontimeout && <p className={styles.error}>{errors.sessiontimeout}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Password Attempts: {submitted && !formData.passwordattempts && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"passwordattempts\"\r\n              value={formData.passwordattempts}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.passwordattempts && <p className={styles.error}>{errors.passwordattempts}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Never Expires:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"passwordneverexpires\"\r\n              checked={formData.passwordneverexpires}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {!formData.passwordneverexpires && (\r\n            <>\r\n              <div className={styles.formGroup}>\r\n                <label>\r\n                  Password Change Duration: {submitted && !formData.passwordchangeduration && <span className={styles.requiredAsterisk}>*</span>}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"passwordchangeduration\"\r\n                  value={formData.passwordchangeduration}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordchangeduration && <p className={styles.error}>{errors.passwordchangeduration}</p>}\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>\r\n                  Password Expire Notification: {submitted && !formData.passwordexpirenotification && <span className={styles.requiredAsterisk}>*</span>}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"passwordexpirenotification\"\r\n                  value={formData.passwordexpirenotification}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {errors.passwordexpirenotification && <p className={styles.error}>{errors.passwordexpirenotification}</p>}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Status: {submitted && !formData.status && <span className={styles.requiredAsterisk}>*</span>}\r\n            </label>\r\n            <select\r\n              name=\"status\"\r\n              value={formData.status}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"1\">Active</option>\r\n              <option value=\"2\">Inactive</option>\r\n            </select>\r\n            {errors.status && <p className={styles.error}>{errors.status}</p>}\r\n          </div>\r\n          <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n          <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n          <button type=\"button\" onClick={handleRedirect} className={styles.ListButton}>List</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}