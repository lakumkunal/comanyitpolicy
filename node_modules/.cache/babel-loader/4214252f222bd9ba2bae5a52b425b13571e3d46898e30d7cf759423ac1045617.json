{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport log from '../log.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setPolicyname] = useState('');\n  const [sessiontimeout, setSessiontimeout] = useState('');\n  const [passwordattempts, setPasswordattempts] = useState('');\n  const [passwordneverexpires, setPasswordneverexpires] = useState(false);\n  const [passwordchangeduration, setPasswordchangeduration] = useState('');\n  const [passwordexpirenotification, setPasswordexpirenotification] = useState('');\n  const [status, setStatus] = useState('');\n  const [errors, setErrors] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n  const handleReset = () => {\n    setPolicyname('');\n    setSessiontimeout('');\n    setPasswordattempts('');\n    setPasswordneverexpires(false);\n    setPasswordchangeduration('');\n    setPasswordexpirenotification('');\n    setStatus('');\n    setErrors({});\n    setIsSubmitted(false);\n  };\n  const validatePolicyName = name => {\n    if (!/^[a-zA-Z0-9]/.test(name) || !/[a-zA-Z0-9]$/.test(name)) {\n      return 'Policy name must start and end with an alphanumeric character.';\n    } else if (!/^[a-zA-Z0-9 _-]*$/.test(name)) {\n      return 'Policy name can only contain alphanumeric characters, underscores, spaces, and dashes (-).';\n    } else if (/__+/.test(name)) {\n      return 'Policy name cannot contain consecutive underscores.';\n    } else if (/([a-zA-Z0-9])\\1\\1/.test(name)) {\n      return 'Policy name cannot contain three consecutive identical characters.';\n    }\n    return '';\n  };\n  const validateSessionTimeout = timeout => {\n    if (isNaN(timeout) || timeout < 1 || timeout > 999) {\n      return 'Session Timeout must be a number between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordAttempts = attempts => {\n    if (isNaN(attempts) || attempts < 1 || attempts > 999) {\n      return 'Password Attempts must be a number between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordChangeDuration = duration => {\n    if (isNaN(duration) || duration < 1 || duration > 999) {\n      return 'Password Change Duration must be a number between 1 and 999.';\n    } else if (parseInt(passwordexpirenotification) && parseInt(duration) < parseInt(passwordexpirenotification)) {\n      return 'Password Change Duration cannot be less than Password Expire Notification.';\n    }\n    return '';\n  };\n  const validatePasswordExpireNotification = notification => {\n    if (isNaN(notification) || notification < 1 || notification > 999) {\n      return 'Password Expire Notification must be a number between 1 and 999.';\n    } else if (parseInt(passwordchangeduration) && parseInt(notification) > parseInt(passwordchangeduration)) {\n      return 'Password Expire Notification cannot be greater than Password Change Duration.';\n    }\n    return '';\n  };\n  const handlePolicyNameChange = e => {\n    const name = e.target.value;\n    setPolicyname(name);\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      policyname: validatePolicyName(name)\n    }));\n  };\n  const handleSessionTimeoutChange = e => {\n    const timeout = e.target.value;\n    setSessiontimeout(timeout.replace(/[^0-9]/g, '')); // Restrict non-numeric input\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      sessiontimeout: validateSessionTimeout(timeout)\n    }));\n  };\n  const handlePasswordAttemptsChange = e => {\n    const attempts = e.target.value;\n    setPasswordattempts(attempts.replace(/[^0-9]/g, '')); // Restrict non-numeric input\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      passwordattempts: validatePasswordAttempts(attempts)\n    }));\n  };\n  const handlePasswordChangeDurationChange = e => {\n    const duration = e.target.value;\n    setPasswordchangeduration(duration.replace(/[^0-9]/g, '')); // Restrict non-numeric input\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      passwordchangeduration: validatePasswordChangeDuration(duration)\n    }));\n  };\n  const handlePasswordExpireNotificationChange = e => {\n    const notification = e.target.value;\n    setPasswordexpirenotification(notification.replace(/[^0-9]/g, '')); // Restrict non-numeric input\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      passwordexpirenotification: validatePasswordExpireNotification(notification)\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitted(true);\n    const newErrors = {};\n    newErrors.policyname = validatePolicyName(policyname);\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\n    if (!passwordneverexpires) {\n      newErrors.passwordchangeduration = validatePasswordChangeDuration(passwordchangeduration);\n      newErrors.passwordexpirenotification = validatePasswordExpireNotification(passwordexpirenotification);\n    }\n    if (Object.values(newErrors).some(error => error)) {\n      setErrors(newErrors);\n      return;\n    }\n    const formData = {\n      policyname,\n      sessiontimeout,\n      passwordattempts,\n      passwordneverexpires,\n      passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n      passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n      status\n    };\n\n    //   try {\n    //     const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n    //       method: 'POST',\n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       },\n    //       body: JSON.stringify(formData)\n    //     });\n\n    //     if (response.ok) {\n    //       const result = await response.json();\n    //       console.log('Form submitted successfully:', result);\n\n    //       // Reset the form and show success toast\n    //       handleReset();\n    //       toast.success(`Policy ${formData.policyname} saved successfully!`);\n\n    //       // Log success with appropriate details\n    //       console.log('Calling log function with success details');  // Add this to verify\n    //       log('POST /api/postcompanyitpolicy', 'Success', 200, `Policy ${formData.policyname} saved successfully`);\n\n    //       setIsSubmitted(false);\n    //   } else {\n    //       console.error('Error submitting form:', response.statusText);\n\n    //       // Show error toast and log the failure\n    //       toast.error('Error submitting form. Please try again.');\n    //       log('POST /api/postcompanyitpolicy', 'Error', response.status, 'Failed to submit form');\n    //   }\n\n    //   } catch (error) {\n    //     // Log the error and show a toast for the exception\n    //     log('POST /api/postcompanyitpolicy', 'Error', 500, error.message);\n\n    //     console.error('An error occurred:', error);\n    //     toast.error('An error occurred. Please check the console for details.');\n    //   }\n    // }\n\n    try {\n      const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Form submitted successfully:', result);\n\n        // Reset the form and show success toast\n        handleReset();\n        toast.success(`Policy ${formData.policyname} saved successfully!`);\n\n        // Log success with appropriate details\n        console.log('Calling log function with success details');\n        log('POST /api/postcompanyitpolicy', 'Success', 200, `Policy ${formData.policyname} saved successfully`);\n        setIsSubmitted(false);\n      } else {\n        console.error('Error submitting form:', response.statusText);\n\n        // Show error toast and log the failure\n        toast.error('Error submitting form. Please try again.');\n        log('POST /api/postcompanyitpolicy', 'Error', response.status, `Failed to submit form: ${response.statusText}`);\n      }\n    } catch (error) {\n      // Log the error and show a toast for the exception\n      log('POST /api/postcompanyitpolicy', 'Error', 500, `An exception occurred: ${error.message}`);\n      console.error('An error occurred:', error);\n      toast.error('An error occurred. Please check the console for details.');\n    }\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.formGroup} ${styles.sideBySide}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Policy Name:\", isSubmitted && !policyname && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: policyname,\n          onChange: handlePolicyNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), isSubmitted && !policyname ? null : errors.policyname && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.policyname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Session Timeout (minutes):\", isSubmitted && !sessiontimeout && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sessiontimeout,\n          onChange: handleSessionTimeoutChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), isSubmitted && !sessiontimeout ? null : errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.sessiontimeout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.formGroup} ${styles.sideBySide}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Attempts:\", isSubmitted && !passwordattempts && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordattempts,\n          onChange: handlePasswordAttemptsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }, this), isSubmitted && !passwordattempts ? null : errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordattempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Never Expires:\", isSubmitted && !policyname && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: passwordneverexpires,\n          onChange: e => setPasswordneverexpires(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Change Duration:\", isSubmitted && !passwordchangeduration && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordchangeduration,\n          onChange: handlePasswordChangeDurationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), isSubmitted && !passwordchangeduration ? null : errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordchangeduration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 93\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Expire Notification:\", isSubmitted && !passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.requiredAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordexpirenotification,\n          onChange: handlePasswordExpireNotificationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), isSubmitted && !passwordexpirenotification ? null : errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordexpirenotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 101\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", isSubmitted && !status && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.requiredAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      className: styles.submitButton,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleReset,\n      className: styles.ResetButton,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleRedirect,\n      className: styles.ListButton,\n      children: \"List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPolicy, \"e1z+ZhxP732RuwMSFIFtP5H1g0A=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","styles","useNavigate","toast","log","jsxDEV","_jsxDEV","AddPolicy","_s","policyname","setPolicyname","sessiontimeout","setSessiontimeout","passwordattempts","setPasswordattempts","passwordneverexpires","setPasswordneverexpires","passwordchangeduration","setPasswordchangeduration","passwordexpirenotification","setPasswordexpirenotification","status","setStatus","errors","setErrors","isSubmitted","setIsSubmitted","navigate","handleReset","validatePolicyName","name","test","validateSessionTimeout","timeout","isNaN","validatePasswordAttempts","attempts","validatePasswordChangeDuration","duration","parseInt","validatePasswordExpireNotification","notification","handlePolicyNameChange","e","target","value","prevErrors","handleSessionTimeoutChange","replace","handlePasswordAttemptsChange","handlePasswordChangeDurationChange","handlePasswordExpireNotificationChange","handleSubmit","preventDefault","newErrors","Object","values","some","error","formData","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","success","statusText","message","handleRedirect","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","sideBySide","requiredAsterisk","type","onChange","checked","onClick","submitButton","ResetButton","ListButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddPolicy.module.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport log from '../log.js';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setPolicyname] = useState('');\r\n  const [sessiontimeout, setSessiontimeout] = useState('');\r\n  const [passwordattempts, setPasswordattempts] = useState('');\r\n  const [passwordneverexpires, setPasswordneverexpires] = useState(false);\r\n  const [passwordchangeduration, setPasswordchangeduration] = useState('');\r\n  const [passwordexpirenotification, setPasswordexpirenotification] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    setPolicyname('');\r\n    setSessiontimeout('');\r\n    setPasswordattempts('');\r\n    setPasswordneverexpires(false);\r\n    setPasswordchangeduration('');\r\n    setPasswordexpirenotification('');\r\n    setStatus('');\r\n    setErrors({});\r\n    setIsSubmitted(false);\r\n  };\r\n\r\n  const validatePolicyName = (name) => {\r\n    if (!/^[a-zA-Z0-9]/.test(name) || !/[a-zA-Z0-9]$/.test(name)) {\r\n      return 'Policy name must start and end with an alphanumeric character.';\r\n    } else if (!/^[a-zA-Z0-9 _-]*$/.test(name)) {\r\n      return 'Policy name can only contain alphanumeric characters, underscores, spaces, and dashes (-).';  \r\n    } else if (/__+/.test(name)) {\r\n      return 'Policy name cannot contain consecutive underscores.';\r\n    } else if (/([a-zA-Z0-9])\\1\\1/.test(name)) {\r\n      return 'Policy name cannot contain three consecutive identical characters.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validateSessionTimeout = (timeout) => {\r\n    if (isNaN(timeout) || timeout < 1 || timeout > 999) {\r\n      return 'Session Timeout must be a number between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordAttempts = (attempts) => {\r\n    if (isNaN(attempts) || attempts < 1 || attempts > 999) {\r\n      return 'Password Attempts must be a number between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (duration) => {\r\n    if (isNaN(duration) || duration < 1 || duration > 999) {\r\n      return 'Password Change Duration must be a number between 1 and 999.';\r\n    } else if (parseInt(passwordexpirenotification) && parseInt(duration) < parseInt(passwordexpirenotification)) {\r\n      return 'Password Change Duration cannot be less than Password Expire Notification.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (notification) => {\r\n    if (isNaN(notification) || notification < 1 || notification > 999) {\r\n      return 'Password Expire Notification must be a number between 1 and 999.';\r\n    } else if (parseInt(passwordchangeduration) && parseInt(notification) > parseInt(passwordchangeduration)) {\r\n      return 'Password Expire Notification cannot be greater than Password Change Duration.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handlePolicyNameChange = (e) => {\r\n    const name = e.target.value;\r\n    setPolicyname(name);\r\n    setErrors(prevErrors => ({ ...prevErrors, policyname: validatePolicyName(name) }));\r\n  };\r\n\r\n  const handleSessionTimeoutChange = (e) => {\r\n    const timeout = e.target.value;\r\n    setSessiontimeout(timeout.replace(/[^0-9]/g, '')); // Restrict non-numeric input\r\n    setErrors(prevErrors => ({ ...prevErrors, sessiontimeout: validateSessionTimeout(timeout) }));\r\n  };\r\n\r\n  const handlePasswordAttemptsChange = (e) => {\r\n    const attempts = e.target.value;\r\n    setPasswordattempts(attempts.replace(/[^0-9]/g, '')); // Restrict non-numeric input\r\n    setErrors(prevErrors => ({ ...prevErrors, passwordattempts: validatePasswordAttempts(attempts) }));\r\n  };\r\n  \r\n  const handlePasswordChangeDurationChange = (e) => {\r\n    const duration = e.target.value;\r\n    setPasswordchangeduration(duration.replace(/[^0-9]/g, '')); // Restrict non-numeric input\r\n    setErrors(prevErrors => ({ ...prevErrors, passwordchangeduration: validatePasswordChangeDuration(duration) }));\r\n  };\r\n\r\n  const handlePasswordExpireNotificationChange = (e) => {\r\n    const notification = e.target.value;\r\n    setPasswordexpirenotification(notification.replace(/[^0-9]/g, '')); // Restrict non-numeric input\r\n    setErrors(prevErrors => ({ ...prevErrors, passwordexpirenotification: validatePasswordExpireNotification(notification) }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitted(true);\r\n\r\n    const newErrors = {};\r\n    newErrors.policyname = validatePolicyName(policyname);\r\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\r\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\r\n    if (!passwordneverexpires) {\r\n      newErrors.passwordchangeduration = validatePasswordChangeDuration(passwordchangeduration);\r\n      newErrors.passwordexpirenotification = validatePasswordExpireNotification(passwordexpirenotification);\r\n    }\r\n\r\n    if (Object.values(newErrors).some(error => error)) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    const formData = {\r\n      policyname,\r\n      sessiontimeout,\r\n      passwordattempts,\r\n      passwordneverexpires,\r\n      passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n      passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n      status\r\n    };\r\n\r\n  //   try {\r\n  //     const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json'\r\n  //       },\r\n  //       body: JSON.stringify(formData)\r\n  //     });\r\n    \r\n  //     if (response.ok) {\r\n  //       const result = await response.json();\r\n  //       console.log('Form submitted successfully:', result);\r\n    \r\n  //       // Reset the form and show success toast\r\n  //       handleReset();\r\n  //       toast.success(`Policy ${formData.policyname} saved successfully!`);\r\n    \r\n  //       // Log success with appropriate details\r\n  //       console.log('Calling log function with success details');  // Add this to verify\r\n  //       log('POST /api/postcompanyitpolicy', 'Success', 200, `Policy ${formData.policyname} saved successfully`);\r\n    \r\n  //       setIsSubmitted(false);\r\n  //   } else {\r\n  //       console.error('Error submitting form:', response.statusText);\r\n        \r\n  //       // Show error toast and log the failure\r\n  //       toast.error('Error submitting form. Please try again.');\r\n  //       log('POST /api/postcompanyitpolicy', 'Error', response.status, 'Failed to submit form');\r\n  //   }\r\n    \r\n  //   } catch (error) {\r\n  //     // Log the error and show a toast for the exception\r\n  //     log('POST /api/postcompanyitpolicy', 'Error', 500, error.message);\r\n      \r\n  //     console.error('An error occurred:', error);\r\n  //     toast.error('An error occurred. Please check the console for details.');\r\n  //   }\r\n  // }\r\n  \r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n    });\r\n    \r\n    if (response.ok) {\r\n        const result = await response.json();\r\n        console.log('Form submitted successfully:', result);\r\n        \r\n        // Reset the form and show success toast\r\n        handleReset();\r\n        toast.success(`Policy ${formData.policyname} saved successfully!`);\r\n        \r\n        // Log success with appropriate details\r\n        console.log('Calling log function with success details');\r\n        log('POST /api/postcompanyitpolicy', 'Success', 200, `Policy ${formData.policyname} saved successfully`);\r\n        \r\n        setIsSubmitted(false);\r\n    } else {\r\n        console.error('Error submitting form:', response.statusText);\r\n        \r\n        // Show error toast and log the failure\r\n        toast.error('Error submitting form. Please try again.');\r\n        log('POST /api/postcompanyitpolicy', 'Error', response.status, `Failed to submit form: ${response.statusText}`);\r\n    }\r\n  \r\n    \r\n} catch (error) {\r\n    // Log the error and show a toast for the exception\r\n    log('POST /api/postcompanyitpolicy', 'Error', 500, `An exception occurred: ${error.message}`);\r\n    \r\n    console.error('An error occurred:', error);\r\n    toast.error('An error occurred. Please check the console for details.');\r\n}\r\n  }\r\n\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.formContainer} id=\"addPolicyForm\">\r\n    <h1>Company IT Policy Master</h1>\r\n    <div className={`${styles.formGroup} ${styles.sideBySide}`}>\r\n      <div>\r\n        <label>\r\n          Policy Name: \r\n          {isSubmitted && !policyname && <span className={styles.requiredAsterisk}>*</span>}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={policyname}\r\n          onChange={handlePolicyNameChange}\r\n        />\r\n        {isSubmitted && !policyname ? null : errors.policyname && <p className={styles.error}>{errors.policyname}</p>}\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Session Timeout (minutes): \r\n          {isSubmitted && !sessiontimeout && <span className={styles.requiredAsterisk}>*</span>}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={sessiontimeout}\r\n          onChange={handleSessionTimeoutChange}\r\n        />\r\n        {isSubmitted && !sessiontimeout ? null : errors.sessiontimeout && <p className={styles.error}>{errors.sessiontimeout}</p>}\r\n      </div>\r\n    </div>\r\n    <div className={`${styles.formGroup} ${styles.sideBySide}`}>\r\n      <div>\r\n        <label>\r\n          Password Attempts: \r\n          {isSubmitted && !passwordattempts && <span className={styles.requiredAsterisk}>*</span>}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={passwordattempts}\r\n          onChange={handlePasswordAttemptsChange}\r\n        />\r\n        {isSubmitted && !passwordattempts ? null : errors.passwordattempts && <p className={styles.error}>{errors.passwordattempts}</p>}\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Password Never Expires: \r\n          {isSubmitted && !policyname && <span className={styles.requiredAsterisk}>*</span>}\r\n        </label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={passwordneverexpires}\r\n          onChange={(e) => setPasswordneverexpires(e.target.checked)}\r\n        />\r\n      </div>\r\n    </div>\r\n    {!passwordneverexpires && (\r\n      <div>\r\n        <div className={styles.formGroup}>\r\n          <label>\r\n            Password Change Duration: \r\n            {isSubmitted && !passwordchangeduration && <span className={styles.requiredAsterisk}>*</span>}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={passwordchangeduration}\r\n            onChange={handlePasswordChangeDurationChange}\r\n          />\r\n          {isSubmitted && !passwordchangeduration ? null : errors.passwordchangeduration && <p className={styles.error}>{errors.passwordchangeduration}</p>}\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>\r\n            Password Expire Notification: \r\n            {isSubmitted && !passwordexpirenotification && <span className={styles.requiredAsterisk}>*</span>}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={passwordexpirenotification}\r\n            onChange={handlePasswordExpireNotificationChange}\r\n          />\r\n          {isSubmitted && !passwordexpirenotification ? null : errors.passwordexpirenotification && <p className={styles.error}>{errors.passwordexpirenotification}</p>}\r\n        </div>\r\n      </div>\r\n    )}\r\n    <div className={styles.formGroup}>\r\n      <label>\r\n        Status: \r\n        {isSubmitted && !status && <span className={styles.requiredAsterisk}>*</span>}\r\n      </label>\r\n      <select value={status} onChange={(e) => setStatus(e.target.value)}>\r\n        <option value=\"\">Select</option>\r\n        <option value=\"1\">Active</option>\r\n        <option value=\"2\">Inactive</option>\r\n      </select>\r\n    </div>\r\n    <button type=\"submit\" onClick={handleSubmit} className={styles.submitButton}>Submit</button>\r\n    <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n    <button type=\"button\" onClick={handleRedirect} className={styles.ListButton}>List</button>\r\n  </form>\r\n  \r\n  );\r\n}\r\n\r\nexport default AddPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}