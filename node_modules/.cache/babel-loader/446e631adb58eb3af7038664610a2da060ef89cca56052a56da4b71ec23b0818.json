{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setpolicyname] = useState('');\n  const [sessiontimeout, setsessiontimeout] = useState('');\n  const [passwordattempts, setpasswordattempts] = useState('');\n  const [passwordneverexpires, setpasswordneverexpires] = useState(false);\n  const [passwordchangeduration, setpasswordchangeduration] = useState('');\n  const [passwordexpirenotification, setpasswordexpirenotification] = useState('');\n  const [status, setstatus] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleReset = () => {\n    document.getElementById('addPolicyForm').reset();\n    setpolicyname('');\n    setsessiontimeout('');\n    setpasswordattempts('');\n    setpasswordneverexpires(false);\n    setpasswordchangeduration('');\n    setpasswordexpirenotification('');\n    setstatus('');\n    setErrors({});\n  };\n  const validatePolicyName = name => {\n    const errors = {};\n    if (name) {\n      const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\n      const endsWithAlphanumericRegex = /[a-zA-Z0-9]$/;\n      const noConsecutiveUnderscoresRegex = /__+/;\n      const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\n      if (!startsWithAlphanumericRegex.test(name) || !endsWithAlphanumericRegex.test(name)) {\n        errors.policyname = 'Policy name must start and end with an alphanumeric character.';\n      } else if (!alphanumericUnderscoreRegex.test(name)) {\n        errors.policyname = 'Policy name can only contain alphanumeric characters and underscores.';\n      } else if (noConsecutiveUnderscoresRegex.test(name)) {\n        errors.policyname = 'Policy name cannot contain consecutive underscores.';\n      } else if (/([a-zA-Z0-9])\\1\\1/.test(name)) {\n        errors.policyname = 'Policy name cannot contain three consecutive identical characters.';\n      }\n    }\n    return errors;\n  };\n  const validateSessionTimeout = timeout => {\n    const errors = {};\n    if (timeout) {\n      if (isNaN(timeout) || timeout < 1 || timeout > 999) {\n        errors.sessiontimeout = 'Session Timeout must be a number between 1 and 999.';\n      }\n    }\n    return errors;\n  };\n  const validatePasswordAttempts = attempts => {\n    const errors = {};\n    if (attempts) {\n      if (isNaN(attempts) || attempts < 1 || attempts > 10) {\n        errors.passwordattempts = 'Password Attempts must be a number between 1 and 10.';\n      }\n    }\n    return errors;\n  };\n  const validatePasswordChangeDuration = duration => {\n    const errors = {};\n    if (duration) {\n      if (isNaN(duration) || duration < 1 || duration > 999) {\n        errors.passwordchangeduration = 'Password Change Duration must be a number between 1 and 999.';\n      }\n    }\n    return errors;\n  };\n  const validatePasswordExpireNotification = notification => {\n    const errors = {};\n    if (notification) {\n      if (isNaN(notification) || notification < 1 || notification > 999) {\n        errors.passwordexpirenotification = 'Password Expire Notification must be a number between 1 and 999.';\n      }\n    }\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const policyNameErrors = validatePolicyName(policyname);\n    const sessionTimeoutErrors = !sessiontimeout ? {\n      sessiontimeout: 'Session Timeout cannot be empty.'\n    } : validateSessionTimeout(sessiontimeout);\n    const passwordAttemptsErrors = !passwordattempts ? {\n      passwordattempts: 'Password Attempts cannot be empty.'\n    } : validatePasswordAttempts(passwordattempts);\n    const passwordChangeDurationErrors = passwordneverexpires ? {} : !passwordchangeduration ? {\n      passwordchangeduration: 'Password Change Duration cannot be empty.'\n    } : validatePasswordChangeDuration(passwordchangeduration);\n    const passwordExpireNotificationErrors = passwordneverexpires ? {} : !passwordexpirenotification ? {\n      passwordexpirenotification: 'Password Expire Notification cannot be empty.'\n    } : validatePasswordExpireNotification(passwordexpirenotification);\n    const validationErrors = {\n      ...policyNameErrors,\n      ...sessionTimeoutErrors,\n      ...passwordAttemptsErrors,\n      ...passwordChangeDurationErrors,\n      ...passwordExpireNotificationErrors\n    };\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    const formData = {\n      policyname,\n      sessiontimeout,\n      passwordattempts,\n      passwordneverexpires,\n      passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n      passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n      status\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Form submitted successfully:', result);\n        handleReset();\n        alert('Form submitted and data stored successfully!');\n      } else {\n        alert('Error submitting form. Please try again.');\n      }\n    } catch (error) {\n      alert('An error occurred. Please check the console for details.');\n    }\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Policy Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: policyname,\n        onChange: e => setpolicyname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), errors.policyname && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: errors.policyname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Session Time Out (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sessiontimeout,\n        onChange: e => setsessiontimeout(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: errors.sessiontimeout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Attempts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: passwordattempts,\n        onChange: e => setpasswordattempts(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: errors.passwordattempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Never Expires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: passwordneverexpires,\n        onChange: e => {\n          setpasswordneverexpires(e.target.checked);\n          if (e.target.checked) {\n            setpasswordchangeduration('');\n            setpasswordexpirenotification('');\n            setErrors(prevErrors => {\n              const {\n                passwordchangeduration,\n                passwordexpirenotification,\n                ...rest\n              } = prevErrors;\n              return rest;\n            });\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Change Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordchangeduration,\n          onChange: e => setpasswordchangeduration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordchangeduration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Expire Notification:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordexpirenotification,\n          onChange: e => setpasswordexpirenotification(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: errors.passwordexpirenotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setstatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        className: styles.ResetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRedirect,\n        className: styles.ListButton,\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPolicy, \"+/R7DlBI9da03lW4Knhrw/2fiaY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","styles","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPolicy","_s","policyname","setpolicyname","sessiontimeout","setsessiontimeout","passwordattempts","setpasswordattempts","passwordneverexpires","setpasswordneverexpires","passwordchangeduration","setpasswordchangeduration","passwordexpirenotification","setpasswordexpirenotification","status","setstatus","errors","setErrors","navigate","handleReset","document","getElementById","reset","validatePolicyName","name","startsWithAlphanumericRegex","endsWithAlphanumericRegex","noConsecutiveUnderscoresRegex","alphanumericUnderscoreRegex","test","validateSessionTimeout","timeout","isNaN","validatePasswordAttempts","attempts","validatePasswordChangeDuration","duration","validatePasswordExpireNotification","notification","handleSubmit","e","preventDefault","policyNameErrors","sessionTimeoutErrors","passwordAttemptsErrors","passwordChangeDurationErrors","passwordExpireNotificationErrors","validationErrors","Object","keys","length","formData","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","alert","error","handleRedirect","onSubmit","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","type","value","onChange","target","checked","prevErrors","rest","submitButton","onClick","ResetButton","ListButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddPolicy.module.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setpolicyname] = useState('');\r\n  const [sessiontimeout, setsessiontimeout] = useState('');\r\n  const [passwordattempts, setpasswordattempts] = useState('');\r\n  const [passwordneverexpires, setpasswordneverexpires] = useState(false);\r\n  const [passwordchangeduration, setpasswordchangeduration] = useState('');\r\n  const [passwordexpirenotification, setpasswordexpirenotification] = useState('');\r\n  const [status, setstatus] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('addPolicyForm').reset(); \r\n    setpolicyname('');\r\n    setsessiontimeout('');\r\n    setpasswordattempts('');\r\n    setpasswordneverexpires(false);\r\n    setpasswordchangeduration('');\r\n    setpasswordexpirenotification('');\r\n    setstatus('');\r\n    setErrors({});\r\n  };\r\n\r\n  const validatePolicyName = (name) => {\r\n    const errors = {};\r\n\r\n    if (name) {\r\n      const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\r\n      const endsWithAlphanumericRegex = /[a-zA-Z0-9]$/;\r\n      const noConsecutiveUnderscoresRegex = /__+/;\r\n      const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\r\n\r\n      if (!startsWithAlphanumericRegex.test(name) || !endsWithAlphanumericRegex.test(name)) {\r\n        errors.policyname = 'Policy name must start and end with an alphanumeric character.';\r\n      } else if (!alphanumericUnderscoreRegex.test(name)) {\r\n        errors.policyname = 'Policy name can only contain alphanumeric characters and underscores.';\r\n      } else if (noConsecutiveUnderscoresRegex.test(name)) {\r\n        errors.policyname = 'Policy name cannot contain consecutive underscores.';\r\n      } else if (/([a-zA-Z0-9])\\1\\1/.test(name)) {\r\n        errors.policyname = 'Policy name cannot contain three consecutive identical characters.';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const validateSessionTimeout = (timeout) => {\r\n    const errors = {};\r\n\r\n    if (timeout) {\r\n      if (isNaN(timeout) || timeout < 1 || timeout > 999) {\r\n        errors.sessiontimeout = 'Session Timeout must be a number between 1 and 999.';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const validatePasswordAttempts = (attempts) => {\r\n    const errors = {};\r\n\r\n    if (attempts) {\r\n      if (isNaN(attempts) || attempts < 1 || attempts > 10) {\r\n        errors.passwordattempts = 'Password Attempts must be a number between 1 and 10.';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (duration) => {\r\n    const errors = {};\r\n\r\n    if (duration) {\r\n      if (isNaN(duration) || duration < 1 || duration > 999) {\r\n        errors.passwordchangeduration = 'Password Change Duration must be a number between 1 and 999.';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (notification) => {\r\n    const errors = {};\r\n\r\n    if (notification) {\r\n      if (isNaN(notification) || notification < 1 || notification > 999) {\r\n        errors.passwordexpirenotification = 'Password Expire Notification must be a number between 1 and 999.';\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const policyNameErrors = validatePolicyName(policyname);\r\n    const sessionTimeoutErrors = !sessiontimeout ? { sessiontimeout: 'Session Timeout cannot be empty.' } : validateSessionTimeout(sessiontimeout);\r\n    const passwordAttemptsErrors = !passwordattempts ? { passwordattempts: 'Password Attempts cannot be empty.' } : validatePasswordAttempts(passwordattempts);\r\n    const passwordChangeDurationErrors = passwordneverexpires ? {} : (!passwordchangeduration ? { passwordchangeduration: 'Password Change Duration cannot be empty.' } : validatePasswordChangeDuration(passwordchangeduration));\r\n    const passwordExpireNotificationErrors = passwordneverexpires ? {} : (!passwordexpirenotification ? { passwordexpirenotification: 'Password Expire Notification cannot be empty.' } : validatePasswordExpireNotification(passwordexpirenotification));\r\n    \r\n    const validationErrors = { ...policyNameErrors, ...sessionTimeoutErrors, ...passwordAttemptsErrors, ...passwordChangeDurationErrors, ...passwordExpireNotificationErrors };\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    const formData = {\r\n      policyname,\r\n      sessiontimeout,\r\n      passwordattempts,\r\n      passwordneverexpires,\r\n      passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n      passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n      status\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log('Form submitted successfully:', result);\r\n        handleReset(); \r\n        alert('Form submitted and data stored successfully!');\r\n      } else {\r\n        alert('Error submitting form. Please try again.'); \r\n      }\r\n    } catch (error) {\r\n      alert('An error occurred. Please check the console for details.');\r\n    }\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy'); \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.formContainer} id=\"addPolicyForm\">\r\n        <h1>Company IT Policy Master</h1>\r\n      <div className={styles.formGroup}>\r\n        <label>Policy Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={policyname}\r\n          onChange={(e) => setpolicyname(e.target.value)}\r\n        />\r\n        {errors.policyname && <p className={styles.error}>{errors.policyname}</p>}\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <label>Session Time Out (minutes):</label>\r\n        <input\r\n          type=\"text\"\r\n          value={sessiontimeout}\r\n          onChange={(e) => setsessiontimeout(e.target.value)}\r\n        />\r\n        {errors.sessiontimeout && <p className={styles.error}>{errors.sessiontimeout}</p>}\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <label>Password Attempts:</label>\r\n        <input\r\n          type='text'\r\n          value={passwordattempts}\r\n          onChange={(e) => setpasswordattempts(e.target.value)}\r\n        />\r\n        {errors.passwordattempts && <p className={styles.error}>{errors.passwordattempts}</p>}\r\n      </div>\r\n      <div className={styles.formGroup}>\r\n        <label>Password Never Expires:</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={passwordneverexpires}\r\n          onChange={(e) => {\r\n            setpasswordneverexpires(e.target.checked);\r\n            if (e.target.checked) {\r\n              setpasswordchangeduration('');\r\n              setpasswordexpirenotification('');\r\n              setErrors(prevErrors => {\r\n                const { passwordchangeduration, passwordexpirenotification, ...rest } = prevErrors;\r\n                return rest;\r\n              });\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      {!passwordneverexpires && (\r\n        <>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Change Duration:</label>\r\n            <input\r\n              type='text'\r\n              value={passwordchangeduration}\r\n              onChange={(e) => setpasswordchangeduration(e.target.value)}\r\n            />\r\n            {errors.passwordchangeduration && <p className={styles.error}>{errors.passwordchangeduration}</p>}\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Expire Notification:</label>\r\n            <input\r\n              type='text'\r\n              value={passwordexpirenotification}\r\n              onChange={(e) => setpasswordexpirenotification(e.target.value)}\r\n            />\r\n            {errors.passwordexpirenotification && <p className={styles.error}>{errors.passwordexpirenotification}</p>}\r\n          </div>\r\n        </>\r\n      )}\r\n      <div className={styles.formGroup}>\r\n        <label>Status:</label>\r\n        <select value={status} onChange={(e) => setstatus(e.target.value)}>\r\n          <option value=\"\">Select</option>\r\n          <option value=\"1\">Active</option>\r\n          <option value=\"2\">Inactive</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n        <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n        <button type=\"button\" onClick={handleRedirect} className={styles.ListButton}>List</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}