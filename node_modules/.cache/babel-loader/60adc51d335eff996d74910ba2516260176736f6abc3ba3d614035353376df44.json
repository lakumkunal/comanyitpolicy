{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\EditPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styles from './AddPolicy.module.css'; // Import the CSS module\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import toastify styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditPolicy = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [policy, setPolicy] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    policyname: '',\n    sessiontimeout: '',\n    passwordattempts: '',\n    passwordneverexpires: false,\n    passwordchangeduration: '',\n    passwordexpirenotification: '',\n    status: 1\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPolicyById = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"data\", data);\n          if (data) {\n            setPolicy(data);\n            setFormData({\n              policyname: data.policyname,\n              sessiontimeout: data.sessiontimeout,\n              passwordattempts: data.passwordattempts,\n              passwordneverexpires: data.passwordneverexpires,\n              passwordchangeduration: data.passwordchangeduration,\n              passwordexpirenotification: data.passwordexpirenotification,\n              status: data.status\n            });\n            setLoading(false); // Set loading to false once the data is ready\n          } else {\n            toast.error('No policy found with the given ID');\n          }\n        } else {\n          toast.error('Failed to fetch policy');\n        }\n      } catch (error) {\n        console.error('Error fetching policy:', error);\n        toast.error('Error fetching policy');\n      }\n    };\n    fetchPolicyById();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prevFormData => {\n      const newData = {\n        ...prevFormData,\n        [name]: type === 'checkbox' ? checked : value\n      };\n      if (name === 'passwordneverexpires') {\n        if (checked) {\n          newData.passwordchangeduration = '';\n          newData.passwordexpirenotification = '';\n        }\n      }\n      return newData;\n    });\n  };\n  const validateSessionTimeout = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Session timeout must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordChangeDuration = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password Change Duration must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordExpireNotification = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password Expire Notification must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validateForm = () => {\n    let isValid = true;\n    if (!formData.policyname) {\n      toast.error('Policy Name is required');\n      isValid = false;\n    }\n    const sessionTimeoutError = validateSessionTimeout(formData.sessiontimeout);\n    if (sessionTimeoutError) {\n      toast.error(sessionTimeoutError);\n      isValid = false;\n    }\n    if (formData.passwordattempts === '' || isNaN(formData.passwordattempts) || Number(formData.passwordattempts) > 999) {\n      toast.error('Password Attempts must be a number less than or equal to 999');\n      isValid = false;\n    }\n    if (!formData.passwordneverexpires) {\n      const passwordChangeDurationError = validatePasswordChangeDuration(formData.passwordchangeduration);\n      if (passwordChangeDurationError) {\n        toast.error(passwordChangeDurationError);\n        isValid = false;\n      }\n      const passwordExpireNotificationError = validatePasswordExpireNotification(formData.passwordexpirenotification);\n      if (passwordExpireNotificationError) {\n        toast.error(passwordExpireNotificationError);\n        isValid = false;\n      }\n      if (Number(formData.passwordchangeduration) <= Number(formData.passwordexpirenotification)) {\n        toast.error('Password Change Duration must be greater than Password Expire Notification');\n        isValid = false;\n      }\n    }\n    return isValid;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...formData,\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification\n        })\n      });\n      if (response.ok) {\n        toast.success('Policy updated successfully!');\n        navigate('/AddPolicy');\n      } else {\n        toast.error('Failed to update policy');\n      }\n    } catch (error) {\n      console.error('Error updating policy:', error);\n      toast.error('An error occurred while updating the policy.');\n    }\n  };\n  const handleRedirect = () => {\n    navigate('/GetPolicy');\n  };\n  const handleReset = () => {\n    setFormData({\n      policyname: '',\n      sessiontimeout: '',\n      passwordattempts: '',\n      passwordneverexpires: false,\n      passwordchangeduration: '',\n      passwordexpirenotification: '',\n      status: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading policy...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Policy Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"policyname\",\n          value: formData.policyname,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Session Timeout:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"sessiontimeout\",\n          value: formData.sessiontimeout,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Attempts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"passwordattempts\",\n          value: formData.passwordattempts,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Never Expires:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"passwordneverexpires\",\n          checked: formData.passwordneverexpires,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), !formData.passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password Change Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"passwordchangeduration\",\n            value: formData.passwordchangeduration,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password Expire Notification:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"passwordexpirenotification\",\n            value: formData.passwordexpirenotification,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          value: formData.status,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        className: styles.ResetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRedirect,\n        className: styles.ListButton,\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPolicy, \"9mQolT4zQysAwnZ9v4WLkrlQV5Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPolicy;\nexport default EditPolicy;\nvar _c;\n$RefreshReg$(_c, \"EditPolicy\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","styles","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPolicy","_s","id","policy","setPolicy","loading","setLoading","formData","setFormData","policyname","sessiontimeout","passwordattempts","passwordneverexpires","passwordchangeduration","passwordexpirenotification","status","navigate","fetchPolicyById","response","fetch","ok","data","json","console","log","error","handleInputChange","e","name","value","type","checked","target","prevFormData","newData","validateSessionTimeout","isNaN","Number","validatePasswordChangeDuration","validatePasswordExpireNotification","validateForm","isValid","sessionTimeoutError","passwordChangeDurationError","passwordExpireNotificationError","handleSubmit","preventDefault","method","headers","body","JSON","stringify","success","handleRedirect","handleReset","className","formContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formGroup","onChange","submitButton","onClick","ResetButton","ListButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/EditPolicy.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport styles from './AddPolicy.module.css'; // Import the CSS module\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'; // Import toastify styles\r\n\r\nconst EditPolicy = () => {\r\n  const { id } = useParams();\r\n  const [policy, setPolicy] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    policyname: '',\r\n    sessiontimeout: '',\r\n    passwordattempts: '',\r\n    passwordneverexpires: false,\r\n    passwordchangeduration: '',\r\n    passwordexpirenotification: '',\r\n    status: 1,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPolicyById = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/getcompanyitpolicy/${id}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(\"data\", data);\r\n\r\n          if (data) {\r\n            setPolicy(data);\r\n            setFormData({\r\n              policyname: data.policyname,\r\n              sessiontimeout: data.sessiontimeout,\r\n              passwordattempts: data.passwordattempts,\r\n              passwordneverexpires: data.passwordneverexpires,\r\n              passwordchangeduration: data.passwordchangeduration,\r\n              passwordexpirenotification: data.passwordexpirenotification,\r\n              status: data.status,\r\n            });\r\n            setLoading(false); // Set loading to false once the data is ready\r\n          } else {\r\n            toast.error('No policy found with the given ID');\r\n          }\r\n        } else {\r\n          toast.error('Failed to fetch policy');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching policy:', error);\r\n        toast.error('Error fetching policy');\r\n      }\r\n    };\r\n\r\n    fetchPolicyById();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prevFormData => {\r\n      const newData = {\r\n        ...prevFormData,\r\n        [name]: type === 'checkbox' ? checked : value,\r\n      };\r\n\r\n      if (name === 'passwordneverexpires') {\r\n        if (checked) {\r\n          newData.passwordchangeduration = '';\r\n          newData.passwordexpirenotification = '';\r\n        }\r\n      }\r\n\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Session timeout must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password Change Duration must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password Expire Notification must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let isValid = true;\r\n\r\n    if (!formData.policyname) {\r\n      toast.error('Policy Name is required');\r\n      isValid = false;\r\n    }\r\n\r\n    const sessionTimeoutError = validateSessionTimeout(formData.sessiontimeout);\r\n    if (sessionTimeoutError) {\r\n      toast.error(sessionTimeoutError);\r\n      isValid = false;\r\n    }\r\n\r\n    if (formData.passwordattempts === '' || isNaN(formData.passwordattempts) || Number(formData.passwordattempts) > 999) {\r\n      toast.error('Password Attempts must be a number less than or equal to 999');\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.passwordneverexpires) {\r\n      const passwordChangeDurationError = validatePasswordChangeDuration(formData.passwordchangeduration);\r\n      if (passwordChangeDurationError) {\r\n        toast.error(passwordChangeDurationError);\r\n        isValid = false;\r\n      }\r\n\r\n      const passwordExpireNotificationError = validatePasswordExpireNotification(formData.passwordexpirenotification);\r\n      if (passwordExpireNotificationError) {\r\n        toast.error(passwordExpireNotificationError);\r\n        isValid = false;\r\n      }\r\n\r\n      if (Number(formData.passwordchangeduration) <= Number(formData.passwordexpirenotification)) {\r\n        toast.error('Password Change Duration must be greater than Password Expire Notification');\r\n        isValid = false;\r\n      }\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/EditPolicy/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          passwordchangeduration: formData.passwordneverexpires ? null : formData.passwordchangeduration,\r\n          passwordexpirenotification: formData.passwordneverexpires ? null : formData.passwordexpirenotification,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        toast.success('Policy updated successfully!');\r\n        navigate('/AddPolicy');\r\n      } else {\r\n        toast.error('Failed to update policy');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating policy:', error);\r\n      toast.error('An error occurred while updating the policy.');\r\n    }\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    navigate('/GetPolicy');\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData({\r\n      policyname: '',\r\n      sessiontimeout: '',\r\n      passwordattempts: '',\r\n      passwordneverexpires: false,\r\n      passwordchangeduration: '',\r\n      passwordexpirenotification: '',\r\n      status: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <ToastContainer /> {/* Add this to show toast messages */}\r\n      <h1>Company IT Policy Master</h1>\r\n      {loading ? (\r\n        <p>Loading policy...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className={styles.formGroup}>\r\n            <label>Policy Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"policyname\"\r\n              value={formData.policyname}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Session Timeout:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"sessiontimeout\"\r\n              value={formData.sessiontimeout}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Attempts:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"passwordattempts\"\r\n              value={formData.passwordattempts}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Never Expires:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"passwordneverexpires\"\r\n              checked={formData.passwordneverexpires}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {!formData.passwordneverexpires && (\r\n            <>\r\n              <div className={styles.formGroup}>\r\n                <label>Password Change Duration:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"passwordchangeduration\"\r\n                  value={formData.passwordchangeduration}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className={styles.formGroup}>\r\n                <label>Password Expire Notification:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"passwordexpirenotification\"\r\n                  value={formData.passwordexpirenotification}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className={styles.formGroup}>\r\n            <label>Status:</label>\r\n            <select\r\n              name=\"status\"\r\n              value={formData.status}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"1\">Active</option>\r\n              <option value=\"2\">Inactive</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n          <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n          <button type=\"button\" onClick={handleRedirect} className={styles.ListButton}>List</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}