{"ast":null,"code":"// src/log.js\n\nconst log = (methodName, messageType, message) => {\n  const timeStamp = new Date().toISOString();\n  const logMessage = `[${timeStamp}] Method: ${methodName} - ${messageType}: ${message}`;\n\n  // Log in the browser console\n  console.log(logMessage);\n\n  // Optionally: Send log to Node.js backend\n  fetch('/api/log', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      methodName,\n      messageType,\n      message,\n      timeStamp\n    })\n  });\n};\nexport default log;","map":{"version":3,"names":["log","methodName","messageType","message","timeStamp","Date","toISOString","logMessage","console","fetch","method","headers","body","JSON","stringify"],"sources":["E:/companyitpolicymodule/src/log.js"],"sourcesContent":["// src/log.js\r\n\r\nconst log = (methodName, messageType, message) => {\r\n    const timeStamp = new Date().toISOString();\r\n    const logMessage = `[${timeStamp}] Method: ${methodName} - ${messageType}: ${message}`;\r\n  \r\n    // Log in the browser console\r\n    console.log(logMessage);\r\n  \r\n    // Optionally: Send log to Node.js backend\r\n    fetch('/api/log', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ methodName, messageType, message, timeStamp }),\r\n    });\r\n  };\r\n  \r\nexport default log;\r\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGA,CAACC,UAAU,EAAEC,WAAW,EAAEC,OAAO,KAAK;EAC9C,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC1C,MAAMC,UAAU,GAAG,IAAIH,SAAS,aAAaH,UAAU,MAAMC,WAAW,KAAKC,OAAO,EAAE;;EAEtF;EACAK,OAAO,CAACR,GAAG,CAACO,UAAU,CAAC;;EAEvB;EACAE,KAAK,CAAC,UAAU,EAAE;IAChBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEb,UAAU;MAAEC,WAAW;MAAEC,OAAO;MAAEC;IAAU,CAAC;EACtE,CAAC,CAAC;AACJ,CAAC;AAEH,eAAeJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}