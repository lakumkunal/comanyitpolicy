{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setPolicyname] = useState('');\n  const [sessiontimeout, setSessiontimeout] = useState('');\n  const [passwordattempts, setPasswordAttempts] = useState('');\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\n  const [status, setStatus] = useState('');\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const navigate = useNavigate();\n  const handleReset = () => {\n    document.getElementById('addPolicyForm').reset();\n    setPolicyname('');\n    setSessiontimeout('');\n    setPasswordAttempts('');\n    setPasswordNeverExpires(false);\n    setPasswordChangeDuration('');\n    setPasswordExpireNotification('');\n    setStatus('');\n    setErrors({});\n    setTouched({});\n  };\n  const validatePolicyName = name => {\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\n    const endsWithAlphanumericRegex = /[a-zA-Z0-9]$/;\n    const noConsecutiveSpecialCharsRegex = /(?!.*([^\\w\\s])\\1\\1)/;\n    if (!name) return '*';\n    if (!startsWithAlphanumericRegex.test(name)) return 'Policy name must start with an alphanumeric character.';\n    if (!endsWithAlphanumericRegex.test(name)) return 'Policy name must end with an alphanumeric character.';\n    if (!alphanumericUnderscoreRegex.test(name)) return 'Policy name can only contain alphanumeric characters and underscores.';\n    if (!noConsecutiveSpecialCharsRegex.test(name)) return 'Policy name cannot contain consecutive special characters.';\n    if (/(.)\\1\\1/.test(name)) return 'Policy name cannot contain three consecutive identical characters.';\n    return '';\n  };\n  const validateSessionTimeout = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Session timeout must be between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordAttempts = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Password attempts must be between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordChangeDuration = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Password change duration must be between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordExpireNotification = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Password expire notification must be between 1 and 999.';\n    }\n    return '';\n  };\n  const checkDurationVsNotification = () => {\n    if (!passwordneverexpires) {\n      const duration = Number(passwordchangeduration);\n      const notification = Number(passwordexpirenotification);\n      if (duration <= notification) {\n        return 'Password change duration must be greater than password expiration notification.';\n      }\n    }\n    return '';\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Set all fields as touched\n    setTouched({\n      policyname: true,\n      sessiontimeout: true,\n      passwordattempts: true,\n      passwordchangeduration: true,\n      passwordexpirenotification: true,\n      status: true\n    });\n    const newErrors = {};\n\n    // Validate each field\n    newErrors.policyname = validatePolicyName(policyname);\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\n    newErrors.status = !status ? '*' : '';\n    if (!passwordneverexpires) {\n      newErrors.passwordchangeduration = validatePasswordChangeDuration(passwordchangeduration);\n      newErrors.passwordexpirenotification = validatePasswordExpireNotification(passwordexpirenotification);\n      const durationVsNotificationError = checkDurationVsNotification();\n      if (durationVsNotificationError) {\n        newErrors.passwordchangeduration = durationVsNotificationError;\n      }\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            policyname,\n            sessiontimeout,\n            passwordattempts,\n            passwordneverexpires,\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n            status\n          })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log('Form submitted successfully:', result);\n          handleReset();\n          toast.success('Form submitted and data stored successfully!');\n        } else {\n          toast.error('Error submitting form. Please try again.');\n        }\n      } catch (error) {\n        toast.error('An error occurred. Please check the console for details.');\n      }\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n\n    // Update state based on the field\n    switch (name) {\n      case 'policyname':\n        setPolicyname(value);\n        break;\n      case 'sessiontimeout':\n        setSessiontimeout(value);\n        break;\n      case 'passwordattempts':\n        setPasswordAttempts(value);\n        break;\n      case 'passwordchangeduration':\n        setPasswordChangeDuration(value);\n        break;\n      case 'passwordexpirenotification':\n        setPasswordExpireNotification(value);\n        break;\n      case 'status':\n        setStatus(value);\n        break;\n      case 'passwordneverexpires':\n        setPasswordNeverExpires(checked);\n        break;\n      default:\n        break;\n    }\n\n    // Validate field immediately if it has been touched\n    if (touched[name]) {\n      const validator = {\n        policyname: validatePolicyName,\n        sessiontimeout: validateSessionTimeout,\n        passwordattempts: validatePasswordAttempts,\n        passwordchangeduration: validatePasswordChangeDuration,\n        passwordexpirenotification: validatePasswordExpireNotification,\n        status: () => !value ? '*' : ''\n      }[name];\n      if (validator) {\n        setErrors(prev => ({\n          ...prev,\n          [name]: validator(value)\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Policy Name:\", touched.policyname && errors.policyname === '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 63\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"policyname\",\n        value: policyname,\n        onChange: handleChange,\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          policyname: true\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), touched.policyname && errors.policyname && errors.policyname !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.policyname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Session Timeout:\", touched.sessiontimeout && errors.sessiontimeout === '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"sessiontimeout\",\n        value: sessiontimeout,\n        onChange: handleChange,\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          sessiontimeout: true\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), touched.sessiontimeout && errors.sessiontimeout && errors.sessiontimeout !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.sessiontimeout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 94\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password Attempts:\", touched.passwordattempts && errors.passwordattempts === '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passwordattempts\",\n        value: passwordattempts,\n        onChange: handleChange,\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          passwordattempts: true\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), touched.passwordattempts && errors.passwordattempts && errors.passwordattempts !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.passwordattempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 100\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Never Expires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"passwordneverexpires\",\n        checked: passwordneverexpires,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Change Duration:\", touched.passwordchangeduration && errors.passwordchangeduration === '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.errorAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 91\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordchangeduration\",\n          value: passwordchangeduration,\n          onChange: handleChange,\n          onBlur: () => setTouched(prev => ({\n            ...prev,\n            passwordchangeduration: true\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), touched.passwordchangeduration && errors.passwordchangeduration && errors.passwordchangeduration !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordchangeduration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 122\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password Expire Notification:\", touched.passwordexpirenotification && errors.passwordexpirenotification === '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.errorAsterisk,\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 99\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordexpirenotification\",\n          value: passwordexpirenotification,\n          onChange: handleChange,\n          onBlur: () => setTouched(prev => ({\n            ...prev,\n            passwordexpirenotification: true\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), touched.passwordexpirenotification && errors.passwordexpirenotification && errors.passwordexpirenotification !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordexpirenotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 134\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", touched.status && errors.status === '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorAsterisk,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: status,\n        onChange: handleChange,\n        onBlur: () => setTouched(prev => ({\n          ...prev,\n          status: true\n        })),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inactive\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), touched.status && errors.status && errors.status !== '*' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPolicy, \"pb/om729o4xEqQ6RetOT206J9vY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","styles","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPolicy","_s","policyname","setPolicyname","sessiontimeout","setSessiontimeout","passwordattempts","setPasswordAttempts","passwordneverexpires","setPasswordNeverExpires","passwordchangeduration","setPasswordChangeDuration","passwordexpirenotification","setPasswordExpireNotification","status","setStatus","errors","setErrors","touched","setTouched","navigate","handleReset","document","getElementById","reset","validatePolicyName","name","alphanumericUnderscoreRegex","startsWithAlphanumericRegex","endsWithAlphanumericRegex","noConsecutiveSpecialCharsRegex","test","validateSessionTimeout","value","isNaN","Number","validatePasswordAttempts","validatePasswordChangeDuration","validatePasswordExpireNotification","checkDurationVsNotification","duration","notification","handleSubmit","e","preventDefault","newErrors","durationVsNotificationError","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","success","error","handleChange","type","checked","target","validator","prev","onSubmit","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","errorAsterisk","onChange","onBlur","buttonGroup","onClick","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddPolicy.module.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setPolicyname] = useState('');\r\n  const [sessiontimeout, setSessiontimeout] = useState('');\r\n  const [passwordattempts, setPasswordAttempts] = useState('');\r\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\r\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\r\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('addPolicyForm').reset(); \r\n    setPolicyname('');\r\n    setSessiontimeout('');\r\n    setPasswordAttempts('');\r\n    setPasswordNeverExpires(false);\r\n    setPasswordChangeDuration('');\r\n    setPasswordExpireNotification('');\r\n    setStatus('');\r\n    setErrors({});\r\n    setTouched({});\r\n  };\r\n\r\n  const validatePolicyName = (name) => {\r\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\r\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\r\n    const endsWithAlphanumericRegex = /[a-zA-Z0-9]$/;\r\n    const noConsecutiveSpecialCharsRegex = /(?!.*([^\\w\\s])\\1\\1)/;\r\n\r\n    if (!name) return '*';\r\n    if (!startsWithAlphanumericRegex.test(name)) return 'Policy name must start with an alphanumeric character.';\r\n    if (!endsWithAlphanumericRegex.test(name)) return 'Policy name must end with an alphanumeric character.';\r\n    if (!alphanumericUnderscoreRegex.test(name)) return 'Policy name can only contain alphanumeric characters and underscores.';\r\n    if (!noConsecutiveSpecialCharsRegex.test(name)) return 'Policy name cannot contain consecutive special characters.';\r\n    if (/(.)\\1\\1/.test(name)) return 'Policy name cannot contain three consecutive identical characters.';\r\n    return '';\r\n  };\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Session timeout must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordAttempts = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Password attempts must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Password change duration must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Password expire notification must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const checkDurationVsNotification = () => {\r\n    if (!passwordneverexpires) {\r\n      const duration = Number(passwordchangeduration);\r\n      const notification = Number(passwordexpirenotification);\r\n      if (duration <= notification) {\r\n        return 'Password change duration must be greater than password expiration notification.';\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Set all fields as touched\r\n    setTouched({\r\n      policyname: true,\r\n      sessiontimeout: true,\r\n      passwordattempts: true,\r\n      passwordchangeduration: true,\r\n      passwordexpirenotification: true,\r\n      status: true,\r\n    });\r\n\r\n    const newErrors = {};\r\n\r\n    // Validate each field\r\n    newErrors.policyname = validatePolicyName(policyname);\r\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\r\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\r\n    newErrors.status = !status ? '*' : '';\r\n\r\n    if (!passwordneverexpires) {\r\n      newErrors.passwordchangeduration = validatePasswordChangeDuration(passwordchangeduration);\r\n      newErrors.passwordexpirenotification = validatePasswordExpireNotification(passwordexpirenotification);\r\n\r\n      const durationVsNotificationError = checkDurationVsNotification();\r\n      if (durationVsNotificationError) {\r\n        newErrors.passwordchangeduration = durationVsNotificationError;\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            policyname,\r\n            sessiontimeout,\r\n            passwordattempts,\r\n            passwordneverexpires,\r\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n            status\r\n          })\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log('Form submitted successfully:', result);\r\n          handleReset();\r\n          toast.success('Form submitted and data stored successfully!');\r\n        } else {\r\n          toast.error('Error submitting form. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        toast.error('An error occurred. Please check the console for details.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    // Update state based on the field\r\n    switch (name) {\r\n      case 'policyname':\r\n        setPolicyname(value);\r\n        break;\r\n      case 'sessiontimeout':\r\n        setSessiontimeout(value);\r\n        break;\r\n      case 'passwordattempts':\r\n        setPasswordAttempts(value);\r\n        break;\r\n      case 'passwordchangeduration':\r\n        setPasswordChangeDuration(value);\r\n        break;\r\n      case 'passwordexpirenotification':\r\n        setPasswordExpireNotification(value);\r\n        break;\r\n      case 'status':\r\n        setStatus(value);\r\n        break;\r\n      case 'passwordneverexpires':\r\n        setPasswordNeverExpires(checked);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Validate field immediately if it has been touched\r\n    if (touched[name]) {\r\n      const validator = {\r\n        policyname: validatePolicyName,\r\n        sessiontimeout: validateSessionTimeout,\r\n        passwordattempts: validatePasswordAttempts,\r\n        passwordchangeduration: validatePasswordChangeDuration,\r\n        passwordexpirenotification: validatePasswordExpireNotification,\r\n        status: () => (!value ? '*' : '')\r\n      }[name];\r\n      \r\n      if (validator) {\r\n        setErrors(prev => ({ ...prev, [name]: validator(value) }));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.formContainer} id=\"addPolicyForm\">\r\n      <h1>Company IT Policy Master</h1>\r\n      <ToastContainer />\r\n      \r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Policy Name:\r\n          {touched.policyname && errors.policyname === '*' && <span className={styles.errorAsterisk}>*</span>}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"policyname\"\r\n          value={policyname}\r\n          onChange={handleChange}\r\n          onBlur={() => setTouched(prev => ({ ...prev, policyname: true }))}\r\n        />\r\n        {touched.policyname && errors.policyname && errors.policyname !== '*' && <span className={styles.error}>{errors.policyname}</span>}\r\n      </div>\r\n      \r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Session Timeout:\r\n          {touched.sessiontimeout && errors.sessiontimeout === '*' && <span className={styles.errorAsterisk}>*</span>}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"sessiontimeout\"\r\n          value={sessiontimeout}\r\n          onChange={handleChange}\r\n          onBlur={() => setTouched(prev => ({ ...prev, sessiontimeout: true }))}\r\n        />\r\n        {touched.sessiontimeout && errors.sessiontimeout && errors.sessiontimeout !== '*' && <span className={styles.error}>{errors.sessiontimeout}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Password Attempts:\r\n          {touched.passwordattempts && errors.passwordattempts === '*' && <span className={styles.errorAsterisk}>*</span>}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"passwordattempts\"\r\n          value={passwordattempts}\r\n          onChange={handleChange}\r\n          onBlur={() => setTouched(prev => ({ ...prev, passwordattempts: true }))}\r\n        />\r\n        {touched.passwordattempts && errors.passwordattempts && errors.passwordattempts !== '*' && <span className={styles.error}>{errors.passwordattempts}</span>}\r\n      </div>\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Password Never Expires:\r\n        </label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"passwordneverexpires\"\r\n          checked={passwordneverexpires}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      {!passwordneverexpires && (\r\n        <>\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Password Change Duration:\r\n              {touched.passwordchangeduration && errors.passwordchangeduration === '*' && <span className={styles.errorAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"passwordchangeduration\"\r\n              value={passwordchangeduration}\r\n              onChange={handleChange}\r\n              onBlur={() => setTouched(prev => ({ ...prev, passwordchangeduration: true }))}\r\n            />\r\n            {touched.passwordchangeduration && errors.passwordchangeduration && errors.passwordchangeduration !== '*' && <span className={styles.error}>{errors.passwordchangeduration}</span>}\r\n          </div>\r\n\r\n          <div className={styles.formGroup}>\r\n            <label>\r\n              Password Expire Notification:\r\n              {touched.passwordexpirenotification && errors.passwordexpirenotification === '*' && <span className={styles.errorAsterisk}>*</span>}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"passwordexpirenotification\"\r\n              value={passwordexpirenotification}\r\n              onChange={handleChange}\r\n              onBlur={() => setTouched(prev => ({ ...prev, passwordexpirenotification: true }))}\r\n            />\r\n            {touched.passwordexpirenotification && errors.passwordexpirenotification && errors.passwordexpirenotification !== '*' && <span className={styles.error}>{errors.passwordexpirenotification}</span>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div className={styles.formGroup}>\r\n        <label>\r\n          Status:\r\n          {touched.status && errors.status === '*' && <span className={styles.errorAsterisk}>*</span>}\r\n        </label>\r\n        <select\r\n          name=\"status\"\r\n          value={status}\r\n          onChange={handleChange}\r\n          onBlur={() => setTouched(prev => ({ ...prev, status: true }))}\r\n        >\r\n          <option value=\"\">Select Status</option>\r\n          <option value=\"active\">Active</option>\r\n          <option value=\"inactive\">Inactive</option>\r\n        </select>\r\n        {touched.status && errors.status && errors.status !== '*' && <span className={styles.error}>{errors.status}</span>}\r\n      </div>\r\n\r\n      <div className={styles.buttonGroup}>\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"button\" onClick={handleReset}>Reset</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}