{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setpolicyname] = useState('');\n  const [sessiontimeout, setsessiontimeout] = useState('');\n  const [passwordattempts, setpasswordattempts] = useState('');\n  const [passwordneverexpires, setpasswordneverexpires] = useState(false);\n  const [passwordchangeduration, setpasswordchangeduration] = useState('');\n  const [passwordexpirenotification, setpasswordexpirenotification] = useState('');\n  const [status, setstatus] = useState('');\n  const navigate = useNavigate();\n  const handleReset = () => {\n    document.getElementById('addPolicyForm').reset();\n    setpolicyname('');\n    setsessiontimeout('');\n    setpasswordattempts('');\n    setpasswordneverexpires(false);\n    setpasswordchangeduration('');\n    setpasswordexpirenotification('');\n    setstatus('');\n  };\n\n  // Validation functions\n  const validatePolicyName = name => {\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\n    if (!startsWithAlphanumericRegex.test(name)) {\n      return 'Policy name must start with an alphanumeric character.';\n    }\n    if (!alphanumericUnderscoreRegex.test(name)) {\n      return 'Policy name can only contain alphanumeric characters and underscores.';\n    }\n    if (!noConsecutiveCharsRegex.test(name)) {\n      return 'Policy name cannot contain three consecutive identical characters.';\n    }\n    return '';\n  };\n  const validateSessionTimeout = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Session timeout must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordAttempts = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password attempts must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordChangeDuration = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password change duration must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n  const validatePasswordExpireNotification = value => {\n    if (value === '' || isNaN(value) || Number(value) > 999) {\n      return 'Password expire notification must be a number less than or equal to 999.';\n    }\n    return '';\n  };\n\n  // Check password change duration vs expire notification\n  const checkDurationVsNotification = () => {\n    if (!passwordneverexpires) {\n      const duration = Number(passwordchangeduration);\n      const notification = Number(passwordexpirenotification);\n      if (duration <= notification) {\n        toast.error('Password change duration must be greater than password expire notification.');\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      policyname,\n      sessiontimeout,\n      passwordattempts,\n      passwordneverexpires,\n      passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n      passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n      status\n    };\n    if (!checkDurationVsNotification()) return;\n    const validationError = validatePolicyName(policyname) || validateSessionTimeout(sessiontimeout) || validatePasswordAttempts(passwordattempts) || validatePasswordChangeDuration(passwordchangeduration) || validatePasswordExpireNotification(passwordexpirenotification);\n    if (validationError) {\n      toast.error(validationError);\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Form submitted successfully:', result);\n        handleReset();\n        toast.success('Form submitted and data stored successfully!');\n      } else {\n        toast.error('Error submitting form. Please try again.');\n      }\n    } catch (error) {\n      toast.error('An error occurred. Please check the console for details.');\n    }\n  };\n\n  // Use effect for live validation feedback\n  useEffect(() => {\n    if (policyname) {\n      const error = validatePolicyName(policyname);\n      if (error) toast.error(error);\n    }\n  }, [policyname]);\n  useEffect(() => {\n    if (sessiontimeout) {\n      const error = validateSessionTimeout(sessiontimeout);\n      if (error) toast.error(error);\n    }\n  }, [sessiontimeout]);\n  useEffect(() => {\n    if (passwordattempts) {\n      const error = validatePasswordAttempts(passwordattempts);\n      if (error) toast.error(error);\n    }\n  }, [passwordattempts]);\n  useEffect(() => {\n    if (passwordchangeduration) {\n      const error = validatePasswordChangeDuration(passwordchangeduration);\n      if (error) toast.error(error);\n    }\n  }, [passwordchangeduration]);\n  useEffect(() => {\n    if (passwordexpirenotification) {\n      const error = validatePasswordExpireNotification(passwordexpirenotification);\n      if (error) toast.error(error);\n    }\n  }, [passwordexpirenotification]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Policy Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: policyname,\n        onChange: e => setpolicyname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Session Time Out (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sessiontimeout,\n        onChange: e => setsessiontimeout(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Attempts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: passwordattempts,\n        onChange: e => setpasswordattempts(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Never Expires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: passwordneverexpires,\n        onChange: e => setpasswordneverexpires(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Change Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordchangeduration,\n          onChange: e => setpasswordchangeduration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Expire Notification:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: passwordexpirenotification,\n          onChange: e => setpasswordexpirenotification(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setstatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        className: styles.ResetButton,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => navigate('/GetPolicy'),\n        className: styles.ListButton,\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPolicy, \"2SLeJDMKsHl7FRIzNVd7KuAfXQg=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","useEffect","styles","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPolicy","_s","policyname","setpolicyname","sessiontimeout","setsessiontimeout","passwordattempts","setpasswordattempts","passwordneverexpires","setpasswordneverexpires","passwordchangeduration","setpasswordchangeduration","passwordexpirenotification","setpasswordexpirenotification","status","setstatus","navigate","handleReset","document","getElementById","reset","validatePolicyName","name","alphanumericUnderscoreRegex","startsWithAlphanumericRegex","noConsecutiveCharsRegex","test","validateSessionTimeout","value","isNaN","Number","validatePasswordAttempts","validatePasswordChangeDuration","validatePasswordExpireNotification","checkDurationVsNotification","duration","notification","error","handleSubmit","e","preventDefault","formData","validationError","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","success","onSubmit","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","type","onChange","target","checked","submitButton","onClick","ResetButton","ListButton","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './AddPolicy.module.css'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setpolicyname] = useState('');\r\n  const [sessiontimeout, setsessiontimeout] = useState('');\r\n  const [passwordattempts, setpasswordattempts] = useState('');\r\n  const [passwordneverexpires, setpasswordneverexpires] = useState(false);\r\n  const [passwordchangeduration, setpasswordchangeduration] = useState('');\r\n  const [passwordexpirenotification, setpasswordexpirenotification] = useState('');\r\n  const [status, setstatus] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('addPolicyForm').reset(); \r\n    setpolicyname('');\r\n    setsessiontimeout('');\r\n    setpasswordattempts('');\r\n    setpasswordneverexpires(false);\r\n    setpasswordchangeduration('');\r\n    setpasswordexpirenotification('');\r\n    setstatus('');\r\n  };\r\n\r\n  // Validation functions\r\n  const validatePolicyName = (name) => {\r\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\r\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\r\n    const noConsecutiveCharsRegex = /(?!.*([a-zA-Z0-9_])\\1\\1)/;\r\n\r\n    if (!startsWithAlphanumericRegex.test(name)) {\r\n      return 'Policy name must start with an alphanumeric character.';\r\n    }\r\n    if (!alphanumericUnderscoreRegex.test(name)) {\r\n      return 'Policy name can only contain alphanumeric characters and underscores.';\r\n    }\r\n    if (!noConsecutiveCharsRegex.test(name)) {\r\n      return 'Policy name cannot contain three consecutive identical characters.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Session timeout must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordAttempts = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password attempts must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password change duration must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (value === '' || isNaN(value) || Number(value) > 999) {\r\n      return 'Password expire notification must be a number less than or equal to 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  // Check password change duration vs expire notification\r\n  const checkDurationVsNotification = () => {\r\n    if (!passwordneverexpires) {\r\n      const duration = Number(passwordchangeduration);\r\n      const notification = Number(passwordexpirenotification);\r\n      if (duration <= notification) {\r\n        toast.error('Password change duration must be greater than password expire notification.');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = {\r\n      policyname,\r\n      sessiontimeout,\r\n      passwordattempts,\r\n      passwordneverexpires,\r\n      passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n      passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n      status\r\n    };\r\n\r\n    if (!checkDurationVsNotification()) return;\r\n\r\n    const validationError = validatePolicyName(policyname) || \r\n                            validateSessionTimeout(sessiontimeout) || \r\n                            validatePasswordAttempts(passwordattempts) ||\r\n                            validatePasswordChangeDuration(passwordchangeduration) || \r\n                            validatePasswordExpireNotification(passwordexpirenotification);\r\n\r\n    if (validationError) {\r\n      toast.error(validationError);  \r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log('Form submitted successfully:', result);\r\n        handleReset(); \r\n        toast.success('Form submitted and data stored successfully!');\r\n      } else {\r\n        toast.error('Error submitting form. Please try again.'); \r\n      }\r\n    } catch (error) {\r\n      toast.error('An error occurred. Please check the console for details.');\r\n    }\r\n  };\r\n\r\n  // Use effect for live validation feedback\r\n  useEffect(() => {\r\n    if (policyname) {\r\n      const error = validatePolicyName(policyname);\r\n      if (error) toast.error(error);\r\n    }\r\n  }, [policyname]);\r\n\r\n  useEffect(() => {\r\n    if (sessiontimeout) {\r\n      const error = validateSessionTimeout(sessiontimeout);\r\n      if (error) toast.error(error);\r\n    }\r\n  }, [sessiontimeout]);\r\n\r\n  useEffect(() => {\r\n    if (passwordattempts) {\r\n      const error = validatePasswordAttempts(passwordattempts);\r\n      if (error) toast.error(error);\r\n    }\r\n  }, [passwordattempts]);\r\n\r\n  useEffect(() => {\r\n    if (passwordchangeduration) {\r\n      const error = validatePasswordChangeDuration(passwordchangeduration);\r\n      if (error) toast.error(error);\r\n    }\r\n  }, [passwordchangeduration]);\r\n\r\n  useEffect(() => {\r\n    if (passwordexpirenotification) {\r\n      const error = validatePasswordExpireNotification(passwordexpirenotification);\r\n      if (error) toast.error(error);\r\n    }\r\n  }, [passwordexpirenotification]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.formContainer} id=\"addPolicyForm\">\r\n        <h1>Company IT Policy Master</h1>\r\n        <ToastContainer />\r\n        <div className={styles.formGroup}>\r\n          <label>Policy Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={policyname}\r\n            onChange={(e) => setpolicyname(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Session Time Out (minutes):</label>\r\n          <input\r\n            type=\"text\"\r\n            value={sessiontimeout}\r\n            onChange={(e) => setsessiontimeout(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Password Attempts:</label>\r\n          <input\r\n            type='text'\r\n            value={passwordattempts}\r\n            onChange={(e) => setpasswordattempts(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>Password Never Expires:</label>\r\n          <input\r\n            type='checkbox'\r\n            checked={passwordneverexpires}\r\n            onChange={(e) => setpasswordneverexpires(e.target.checked)}\r\n          />\r\n        </div>\r\n        {!passwordneverexpires && (\r\n          <>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Change Duration:</label>\r\n            <input\r\n              type='text'\r\n              value={passwordchangeduration}\r\n              onChange={(e) => setpasswordchangeduration(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.formGroup}>\r\n            <label>Password Expire Notification:</label>\r\n            <input\r\n              type='text'\r\n              value={passwordexpirenotification}\r\n              onChange={(e) => setpasswordexpirenotification(e.target.value)}\r\n            />\r\n          </div>\r\n          </>\r\n        )}\r\n        <div className={styles.formGroup}>\r\n          <label>Status:</label>\r\n          <select value={status} onChange={(e) => setstatus(e.target.value)}>\r\n            <option value=\"\">Select</option>\r\n            <option value=\"1\">Active</option>\r\n            <option value=\"2\">Inactive</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <button type=\"submit\" className={styles.submitButton}>Submit</button>\r\n          <button type=\"button\" onClick={handleReset} className={styles.ResetButton}>Reset</button>\r\n          <button type=\"button\" onClick={() => navigate('/GetPolicy')} className={styles.ListButton}>List</button>\r\n        </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddPolicy;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}