{"ast":null,"code":"var _jsxFileName = \"E:\\\\companyitpolicymodule\\\\src\\\\components\\\\AddPolicy.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './AddPolicy.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddPolicy() {\n  _s();\n  const [policyname, setPolicyname] = useState('');\n  const [sessiontimeout, setSessiontimeout] = useState('');\n  const [passwordattempts, setPasswordAttempts] = useState('');\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\n  const [status, setStatus] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleReset = () => {\n    document.getElementById('addPolicyForm').reset();\n    setPolicyname('');\n    setSessiontimeout('');\n    setPasswordAttempts('');\n    setPasswordNeverExpires(false);\n    setPasswordChangeDuration('');\n    setPasswordExpireNotification('');\n    setStatus('');\n    setErrors({});\n  };\n  const validatePolicyName = name => {\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\n    const noConsecutiveSpecialCharsRegex = /(?!.*([^\\w\\s])\\1\\1)/;\n    const startsEndsWithAlphanumeric = /^[a-zA-Z0-9].*[a-zA-Z0-9]$/;\n    if (!name) return '*';\n    if (!startsWithAlphanumericRegex.test(name)) return 'Policy name must start with an alphanumeric character.';\n    if (!startsEndsWithAlphanumeric.test(name)) return 'Policy name must end with an alphanumeric character.';\n    if (!alphanumericUnderscoreRegex.test(name)) return 'Policy name can only contain alphanumeric characters and underscores.';\n    if (!noConsecutiveSpecialCharsRegex.test(name)) return 'Policy name cannot contain consecutive special characters.';\n    return '';\n  };\n  const validateSessionTimeout = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Session timeout must be between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordAttempts = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Password attempts must be between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordChangeDuration = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Password change duration must be between 1 and 999.';\n    }\n    return '';\n  };\n  const validatePasswordExpireNotification = value => {\n    if (!value) return '*';\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\n      return 'Password expire notification must be between 1 and 999.';\n    }\n    return '';\n  };\n  const checkDurationVsNotification = () => {\n    if (!passwordneverexpires) {\n      const duration = Number(passwordchangeduration);\n      const notification = Number(passwordexpirenotification);\n      if (duration <= notification) {\n        return 'Password change duration must be greater than password expiration notification.';\n      }\n    }\n    return '';\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n\n    // Validate each field\n    newErrors.policyname = validatePolicyName(policyname);\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\n    newErrors.passwordchangeduration = !passwordneverexpires ? validatePasswordChangeDuration(passwordchangeduration) : '';\n    newErrors.passwordexpirenotification = !passwordneverexpires ? validatePasswordExpireNotification(passwordexpirenotification) : '';\n    newErrors.status = !status ? '*' : '';\n    const durationVsNotificationError = checkDurationVsNotification();\n    if (durationVsNotificationError) {\n      newErrors.passwordchangeduration = durationVsNotificationError;\n    }\n    setErrors(newErrors);\n    if (Object.keys(newErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            policyname,\n            sessiontimeout,\n            passwordattempts,\n            passwordneverexpires,\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\n            status\n          })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log('Form submitted successfully:', result);\n          handleReset();\n          toast.success('Form submitted and data stored successfully!');\n        } else {\n          toast.error('Error submitting form. Please try again.');\n        }\n      } catch (error) {\n        toast.error('An error occurred. Please check the console for details.');\n      }\n    }\n  };\n  const handleChange = (e, validator) => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const isCheckbox = type === 'checkbox';\n\n    // Update state based on the field\n    switch (name) {\n      case 'policyname':\n        setPolicyname(value);\n        setErrors(prev => ({\n          ...prev,\n          policyname: validator(value)\n        }));\n        break;\n      case 'sessiontimeout':\n        setSessiontimeout(value);\n        setErrors(prev => ({\n          ...prev,\n          sessiontimeout: validator(value)\n        }));\n        break;\n      case 'passwordattempts':\n        setPasswordAttempts(value);\n        setErrors(prev => ({\n          ...prev,\n          passwordattempts: validator(value)\n        }));\n        break;\n      case 'passwordchangeduration':\n        setPasswordChangeDuration(value);\n        setErrors(prev => ({\n          ...prev,\n          passwordchangeduration: validator(value)\n        }));\n        break;\n      case 'passwordexpirenotification':\n        setPasswordExpireNotification(value);\n        setErrors(prev => ({\n          ...prev,\n          passwordexpirenotification: validator(value)\n        }));\n        break;\n      case 'status':\n        setStatus(value);\n        setErrors;\n      case 'status':\n        setStatus(value);\n        setErrors(prev => ({\n          ...prev,\n          status: value ? '' : '*'\n        }));\n        break;\n      case 'passwordneverexpires':\n        setPasswordNeverExpires(checked);\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.formContainer,\n    id: \"addPolicyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company IT Policy Master\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Policy Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"policyname\",\n        value: policyname,\n        onChange: e => handleChange(e, validatePolicyName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), errors.policyname && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.policyname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Session Timeout:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"sessiontimeout\",\n        value: sessiontimeout,\n        onChange: e => handleChange(e, validateSessionTimeout)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), errors.sessiontimeout && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.sessiontimeout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Attempts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"passwordattempts\",\n        value: passwordattempts,\n        onChange: e => handleChange(e, validatePasswordAttempts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), errors.passwordattempts && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.passwordattempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password Never Expires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"passwordneverexpires\",\n        checked: passwordneverexpires,\n        onChange: e => handleChange(e, () => '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), !passwordneverexpires && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Change Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordchangeduration\",\n          value: passwordchangeduration,\n          onChange: e => handleChange(e, validatePasswordChangeDuration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), errors.passwordchangeduration && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordchangeduration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Expire Notification:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"passwordexpirenotification\",\n          value: passwordexpirenotification,\n          onChange: e => handleChange(e, validatePasswordExpireNotification)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this), errors.passwordexpirenotification && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.error,\n          children: errors.passwordexpirenotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: status,\n        onChange: e => handleChange(e, () => !e.target.value ? '*' : ''),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"inactive\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.error,\n        children: errors.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 7\n  }, this);\n}\n_s(AddPolicy, \"fgYOZl/ykAK9qrYbkJyb7bKbkpo=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPolicy;\nexport default AddPolicy;\nvar _c;\n$RefreshReg$(_c, \"AddPolicy\");","map":{"version":3,"names":["React","useState","styles","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","AddPolicy","_s","policyname","setPolicyname","sessiontimeout","setSessiontimeout","passwordattempts","setPasswordAttempts","passwordneverexpires","setPasswordNeverExpires","passwordchangeduration","setPasswordChangeDuration","passwordexpirenotification","setPasswordExpireNotification","status","setStatus","errors","setErrors","navigate","handleReset","document","getElementById","reset","validatePolicyName","name","alphanumericUnderscoreRegex","startsWithAlphanumericRegex","noConsecutiveSpecialCharsRegex","startsEndsWithAlphanumeric","test","validateSessionTimeout","value","isNaN","Number","validatePasswordAttempts","validatePasswordChangeDuration","validatePasswordExpireNotification","checkDurationVsNotification","duration","notification","handleSubmit","e","preventDefault","newErrors","durationVsNotificationError","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","success","error","handleChange","validator","type","checked","target","isCheckbox","prev","onSubmit","className","formContainer","id","children","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","onChange","buttonGroup","onClick","_c","$RefreshReg$"],"sources":["E:/companyitpolicymodule/src/components/AddPolicy.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './AddPolicy.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddPolicy() {\r\n  const [policyname, setPolicyname] = useState('');\r\n  const [sessiontimeout, setSessiontimeout] = useState('');\r\n  const [passwordattempts, setPasswordAttempts] = useState('');\r\n  const [passwordneverexpires, setPasswordNeverExpires] = useState(false);\r\n  const [passwordchangeduration, setPasswordChangeDuration] = useState('');\r\n  const [passwordexpirenotification, setPasswordExpireNotification] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleReset = () => {\r\n    document.getElementById('addPolicyForm').reset();\r\n    setPolicyname('');\r\n    setSessiontimeout('');\r\n    setPasswordAttempts('');\r\n    setPasswordNeverExpires(false);\r\n    setPasswordChangeDuration('');\r\n    setPasswordExpireNotification('');\r\n    setStatus('');\r\n    setErrors({});\r\n  };\r\n\r\n  const validatePolicyName = (name) => {\r\n    const alphanumericUnderscoreRegex = /^[a-zA-Z0-9_]*$/;\r\n    const startsWithAlphanumericRegex = /^[a-zA-Z0-9]/;\r\n    const noConsecutiveSpecialCharsRegex = /(?!.*([^\\w\\s])\\1\\1)/;\r\n    const startsEndsWithAlphanumeric = /^[a-zA-Z0-9].*[a-zA-Z0-9]$/;\r\n\r\n    if (!name) return '*';\r\n    if (!startsWithAlphanumericRegex.test(name)) return 'Policy name must start with an alphanumeric character.';\r\n    if (!startsEndsWithAlphanumeric.test(name)) return 'Policy name must end with an alphanumeric character.';\r\n    if (!alphanumericUnderscoreRegex.test(name)) return 'Policy name can only contain alphanumeric characters and underscores.';\r\n    if (!noConsecutiveSpecialCharsRegex.test(name)) return 'Policy name cannot contain consecutive special characters.';\r\n    return '';\r\n  };\r\n\r\n  const validateSessionTimeout = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Session timeout must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordAttempts = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Password attempts must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordChangeDuration = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Password change duration must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const validatePasswordExpireNotification = (value) => {\r\n    if (!value) return '*';\r\n    if (isNaN(value) || Number(value) < 1 || Number(value) > 999) {\r\n      return 'Password expire notification must be between 1 and 999.';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const checkDurationVsNotification = () => {\r\n    if (!passwordneverexpires) {\r\n      const duration = Number(passwordchangeduration);\r\n      const notification = Number(passwordexpirenotification);\r\n      if (duration <= notification) {\r\n        return 'Password change duration must be greater than password expiration notification.';\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newErrors = {};\r\n\r\n    // Validate each field\r\n    newErrors.policyname = validatePolicyName(policyname);\r\n    newErrors.sessiontimeout = validateSessionTimeout(sessiontimeout);\r\n    newErrors.passwordattempts = validatePasswordAttempts(passwordattempts);\r\n    newErrors.passwordchangeduration = !passwordneverexpires ? validatePasswordChangeDuration(passwordchangeduration) : '';\r\n    newErrors.passwordexpirenotification = !passwordneverexpires ? validatePasswordExpireNotification(passwordexpirenotification) : '';\r\n    newErrors.status = !status ? '*' : '';\r\n\r\n    const durationVsNotificationError = checkDurationVsNotification();\r\n    if (durationVsNotificationError) {\r\n      newErrors.passwordchangeduration = durationVsNotificationError;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.keys(newErrors).length === 0) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/postcompanyitpolicy', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            policyname,\r\n            sessiontimeout,\r\n            passwordattempts,\r\n            passwordneverexpires,\r\n            passwordchangeduration: passwordneverexpires ? null : passwordchangeduration,\r\n            passwordexpirenotification: passwordneverexpires ? null : passwordexpirenotification,\r\n            status\r\n          })\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log('Form submitted successfully:', result);\r\n          handleReset();\r\n          toast.success('Form submitted and data stored successfully!');\r\n        } else {\r\n          toast.error('Error submitting form. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        toast.error('An error occurred. Please check the console for details.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e, validator) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const isCheckbox = type === 'checkbox';\r\n\r\n    // Update state based on the field\r\n    switch (name) {\r\n      case 'policyname':\r\n        setPolicyname(value);\r\n        setErrors(prev => ({ ...prev, policyname: validator(value) }));\r\n        break;\r\n      case 'sessiontimeout':\r\n        setSessiontimeout(value);\r\n        setErrors(prev => ({ ...prev, sessiontimeout: validator(value) }));\r\n        break;\r\n      case 'passwordattempts':\r\n        setPasswordAttempts(value);\r\n        setErrors(prev => ({ ...prev, passwordattempts: validator(value) }));\r\n        break;\r\n      case 'passwordchangeduration':\r\n        setPasswordChangeDuration(value);\r\n        setErrors(prev => ({ ...prev, passwordchangeduration: validator(value) }));\r\n        break;\r\n      case 'passwordexpirenotification':\r\n        setPasswordExpireNotification(value);\r\n        setErrors(prev => ({ ...prev, passwordexpirenotification: validator(value) }));\r\n        break;\r\n      case 'status':\r\n        setStatus(value);\r\n        setErrors\r\n        case 'status':\r\n          setStatus(value);\r\n          setErrors(prev => ({ ...prev, status: value ? '' : '*' }));\r\n          break;\r\n        case 'passwordneverexpires':\r\n          setPasswordNeverExpires(checked);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit} className={styles.formContainer} id=\"addPolicyForm\">\r\n        <h1>Company IT Policy Master</h1>\r\n        <ToastContainer />\r\n        \r\n        <div className={styles.formGroup}>\r\n          <label>\r\n            Policy Name:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"policyname\"\r\n            value={policyname}\r\n            onChange={(e) => handleChange(e, validatePolicyName)}\r\n          />\r\n          {errors.policyname && <span className={styles.error}>{errors.policyname}</span>}\r\n        </div>\r\n        <div className={styles.formGroup}>\r\n          <label>\r\n            Session Timeout:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"sessiontimeout\"\r\n            value={sessiontimeout}\r\n            onChange={(e) => handleChange(e, validateSessionTimeout)}\r\n          />\r\n          {errors.sessiontimeout && <span className={styles.error}>{errors.sessiontimeout}</span>}\r\n        </div>\r\n  \r\n        <div className={styles.formGroup}>\r\n          <label>\r\n            Password Attempts:\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"passwordattempts\"\r\n            value={passwordattempts}\r\n            onChange={(e) => handleChange(e, validatePasswordAttempts)}\r\n          />\r\n          {errors.passwordattempts && <span className={styles.error}>{errors.passwordattempts}</span>}\r\n        </div>\r\n  \r\n        <div className={styles.formGroup}>\r\n          <label>\r\n            Password Never Expires:\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"passwordneverexpires\"\r\n            checked={passwordneverexpires}\r\n            onChange={(e) => handleChange(e, () => '')}\r\n          />\r\n        </div>\r\n  \r\n        {!passwordneverexpires && (\r\n          <>\r\n            <div className={styles.formGroup}>\r\n              <label>\r\n                Password Change Duration:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"passwordchangeduration\"\r\n                value={passwordchangeduration}\r\n                onChange={(e) => handleChange(e, validatePasswordChangeDuration)}\r\n              />\r\n              {errors.passwordchangeduration && <span className={styles.error}>{errors.passwordchangeduration}</span>}\r\n            </div>\r\n  \r\n            <div className={styles.formGroup}>\r\n              <label>\r\n                Password Expire Notification:\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"passwordexpirenotification\"\r\n                value={passwordexpirenotification}\r\n                onChange={(e) => handleChange(e, validatePasswordExpireNotification)}\r\n              />\r\n              {errors.passwordexpirenotification && <span className={styles.error}>{errors.passwordexpirenotification}</span>}\r\n            </div>\r\n          </>\r\n        )}\r\n  \r\n        <div className={styles.formGroup}>\r\n          <label>\r\n            Status:\r\n          </label>\r\n          <select\r\n            name=\"status\"\r\n            value={status}\r\n            onChange={(e) => handleChange(e, () => (!e.target.value ? '*' : ''))}\r\n          >\r\n            <option value=\"\">Select Status</option>\r\n            <option value=\"active\">Active</option>\r\n            <option value=\"inactive\">Inactive</option>\r\n          </select>\r\n          {errors.status && <span className={styles.error}>{errors.status}</span>}\r\n        </div>\r\n  \r\n        <div className={styles.buttonGroup}>\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={handleReset}>Reset</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n  \r\n  export default AddPolicy;\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}